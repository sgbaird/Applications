(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    245461,       5871]
NotebookOptionsPosition[    230505,       5556]
NotebookOutlinePosition[    232891,       5616]
CellTagsIndexPosition[    232804,       5611]
WindowTitle->UnitCellTransformation
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {Cell["MAXRD SYMBOL", "PacletNameCell"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "See Also",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"See Also", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"$CrystalData\"\>":>
       Documentation`HelpLookup[
       "paclet:MaXrd/ref/$CrystalData"], "\<\"$TransformationMatrices\"\>":>
       Documentation`HelpLookup[
       "paclet:MaXrd/ref/$TransformationMatrices"], \
"\<\"ToStandardSetting\"\>":>Documentation`HelpLookup[
       "paclet:MaXrd/ref/ToStandardSetting"], "\<\"GetSymmetryData\"\>":>
       Documentation`HelpLookup[
       "paclet:MaXrd/ref/GetSymmetryData"], "\<\"GetCrystalMetric\"\>":>
       Documentation`HelpLookup[
       "paclet:MaXrd/ref/GetCrystalMetric"], "\<\"$SpaceGroups\"\>":>
       Documentation`HelpLookup[
       "paclet:MaXrd/ref/$SpaceGroups"], "\<\"GetLatticeParameters\"\>":>
       Documentation`HelpLookup["paclet:MaXrd/ref/GetLatticeParameters"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"SeeAlso"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Related Guides",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Related Guides", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->
         False], {"\<\"MaXrd: Mathematica X-ray diffraction package\"\>":>
       Documentation`HelpLookup["paclet:MaXrd/guide/MaXrd"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"MoreAbout"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "URL",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"URL", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"MaXrd/ref/UnitCellTransformation\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["MaXrd/ref/UnitCellTransformation"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/language/MaXrd/ref/\
UnitCellTransformation.html"], StandardForm]], "Input", TextClipboardType -> 
              "PlainText"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
             If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$42598], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"], 
             "MaXrd/ref/UnitCellTransformation", ".html"]], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"]],
      LineSpacing->{1.4, 0}]
    }], "AnchorBar"]}
  }]], "AnchorBarGrid",
 CellID->1],

Cell[CellGroupData[{

Cell[TextData[{
 Cell["UnitCellTransformation", "ObjectName"],
 Cell[BoxData[
  TemplateBox[{8},
   "Spacer1"]]],
 Cell[BoxData[""], "ObjectNameTranslation"]
}], "ObjectNameGrid"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       TemplateBox[{
         Cell[
          TextData["UnitCellTransformation"]], 
         "paclet:MaXrd/ref/UnitCellTransformation"},
        "RefLink",
        BaseStyle->{"InlineFormula"}], "[", 
       RowBox[{
        StyleBox["crystal", "TI"], ",", 
        RowBox[{
         SubscriptBox[
          StyleBox["setting", "TI"], 
          StyleBox["i", "TI"]], "\[Rule]", 
         SubscriptBox[
          StyleBox["value", "TI"], 
          StyleBox["i", "TI"]]}], ",", " ", 
        StyleBox["\[Ellipsis]", "TR"]}], "]"}]], "InlineFormula"],
     " \[LineSeparator]transforms the unit cell of ",
     Cell[BoxData[
      StyleBox["crystal", "TI"]], "InlineFormula"],
     " according to the given settings."
    }]]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       TemplateBox[{
         Cell[
          TextData["UnitCellTransformation"]], 
         "paclet:MaXrd/ref/UnitCellTransformation"},
        "RefLink",
        BaseStyle->{"InlineFormula"}], "[", 
       RowBox[{
        StyleBox["crystal", "TI"], ",", 
        StyleBox["group", "TI"]}], "]"}]], "InlineFormula"],
     "\[LineSeparator]transforms the unit cell of ",
     Cell[BoxData[
      StyleBox["crystal", "TI"]], "InlineFormula"],
     " to the target space group ",
     Cell[BoxData[
      StyleBox["group", "TI"]], "InlineFormula"],
     "."
    }]]}
  }]], "Usage",
 GridBoxOptions->{
 GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {None, {None}}}},
 CellID->982511436]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 ButtonBox[Cell[TextData[{
   Cell[BoxData[
    TemplateBox[{6},
     "Spacer1"]]],
   "Details and Options"
  }], "NotesFrameText"],
  Appearance->{Automatic, None, "Normal", Automatic},
  BaseStyle->None,
  ButtonFunction:>(FrontEndExecute[{
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], All, ButtonCell], 
     FrontEndToken["OpenCloseGroup"], 
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], After, CellContents]}]& ),
  Evaluator->None,
  Method->"Preemptive"]]]], "NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->2072494296],

Cell["", "SectionHeaderSpacer"],

Cell[TextData[{
 "One can specify a custom transformation with the setting ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["\"\<CustomP\>\"", "InlineCode"], "\[Rule]", "P"}], 
   TraditionalForm]], "InlineMath"],
 ", where ",
 Cell[BoxData[
  FormBox["P", TraditionalForm]], "InlineMath"],
 " is a ",
 Cell[BoxData[
  FormBox[
   RowBox[{"3", "\[Times]", "3"}], TraditionalForm]], "InlineMath"],
 " matrix."
}], "Notes",
 CellID->1081352006],

Cell["\<\
The function recognises the following setting commands and corresponding \
values:\
\>", "Notes",
 CellID->179929223],

Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon"], "\"\<AxisPermutation\>\"", Cell[
    "{\"abc\",\"ba-c\",\"cab\",\"-cba\",\"bca\",\"a-cb\"}", "InlineCode"], 
    StyleBox[Cell["orthorhombic", "TableText"], "Notes"]},
   {Cell["      ", "TableRowIcon"], "\"\<CellCentring\>\"", Cell[
    "{\"P\",\"A\",\"B\",\"C\",\"F\",\"I\"}", "InlineCode"], 
    StyleBox[Cell["triclinic, orthorhombic, tetragonal, cubic", "TableText"], 
     "Notes"]},
   {Cell["      ", "TableRowIcon"], "\"\<CellChoice\>\"", Cell[TextData[Cell[
    BoxData[Cell["{1,2,3}", "InlineCode"]]]], "TableText"], 
    StyleBox[Cell["monoclinic", "TableText"], "Notes"]},
   {Cell["      ", "TableRowIcon"], "\"\<CellOrigin\>\"", Cell[TextData[Cell[
    BoxData[Cell["{1,2}", "InlineCode"]]]], "TableText"], 
    StyleBox[Cell["orthorhombic, tetragonal, cubic", "TableText"], "Notes"]},
   {Cell["      ", "TableRowIcon"], "\"\<MultipleCell\>\"", Cell[
    "(see table below)", "TableText"], 
    StyleBox[Cell["tetragonal, trigonal, hexagonal", "TableText"], "Notes"]},
   {Cell["      ", "TableRowIcon"], "\"\<RhombohedralSetting\>\"", Cell[
    TextData[Cell[BoxData[
    Cell["{\"obverse\",\"reverse\"}", "InlineCode"]]]], "TableText"], 
    StyleBox[Cell["trigonal (triple hexagonal cells only)", "TableText"], 
     "Notes"]},
   {Cell["      ", "TableRowIcon"], "\"\<UniqueAxis\>\"", Cell[
    "{\"a\",\"b\",\"c\"}", "InlineCode"], 
    StyleBox[Cell["monoclinic", "TableText"], "Notes"]}
  }]], "3ColumnTableMod",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, 
   "Rows" -> {None, None, None, None, None, None, {None}}},
 GridBoxDividers->{
  "Rows" -> {{True, True, True, True, True, True, True, True}}}},
 CellID->1809341154],

Cell[TextData[{
 "Multiple cells configurations are available for some crystal systems and \
rhombohedral space groups. They are rarely used, except for the hexagonal \
description of rhombohedral unit cells (",
 Cell[BoxData["\"\<R1\>\""], "InlineFormula"],
 ")."
}], "Notes",
 CellID->443141208],

Cell[BoxData[GridBox[{
   {Cell["      ", "TableRowIcon"], Cell["hexagonal", "TableText"], Cell[
    TextData[StyleBox["{\"C1\",\"C2\",\"C3\"}", "InlineCode"]], "TableText"], 
    Cell["orthohexagonal centred cell", "TableText"]},
   {Cell["      ", "TableRowIcon"], Cell["hexagonal", "TableText"], Cell[
    TextData[Cell[BoxData[
    Cell["{\"H1\",\"H2\",\"H3\"}", "InlineCode"]]]], "TableText"], Cell[
    "triple hexagonal cells", "TableText"]},
   {Cell["      ", "TableRowIcon"], Cell["hexagonal", "TableText"], Cell[
    TextData[StyleBox["{\"D1\",\"D2\"}", "InlineCode"]], "TableText"], Cell[
    "triple rhombohedral cell", "TableText"]},
   {Cell["      ", "TableRowIcon"], Cell["rhombohedral", "TableText"], Cell[
    TextData[StyleBox["{\"R1\",\"R2\",\"R3\"}", "InlineCode"]], "TableText"], 
    Cell["triple hexagonal cell", "TableText"]},
   {Cell["      ", "TableRowIcon"], Cell["rhombohedral", "TableText"], Cell[
    TextData[StyleBox["\"R\"", "InlineCode"]], "TableText"], Cell[
    "rhombohedral cell", "TableText"]},
   {Cell["      ", "TableRowIcon"], Cell["rhombohedral", "TableText"], Cell[
    TextData[StyleBox[
    "{\"Cb1\",\"Cb2\",\"Cb3\",\"Ac1\",\"Ac2\",\"Ac3\"}", "InlineCode"]], 
     "TableText"], Cell["triple hexagonal to monoclinic cell", "TableText"]},
   {Cell["      ", "TableRowIcon"], Cell["rhombohedral", "TableText"], Cell[
    TextData[StyleBox[
    "{\"Cb1\",\"Cb2\",\"Cb3\",\"Ac1\",\"Ac2\",\"Ac3\"}", "InlineCode"]], 
     "TableText"], Cell["rhombohedral to monoclinic cell", "TableText"]},
   {Cell["      ", "TableRowIcon"], Cell["tetragonal", "TableText"], Cell[
    TextData[StyleBox[
    "{\"P\",\"I\",\"C1\",\"F1\",\"C2\",\"F2\"}", "InlineCode"]], "TableText"],
     Cell["double cells", "TableText"]}
  }]], "3ColumnTableMod",
 GridBoxOptions->{
 GridBoxBackground->{
  "Columns" -> {{None}}, 
   "Rows" -> {None, None, None, None, None, None, None, {None}}},
 GridBoxDividers->{
  "Rows" -> {{True, True, True, True, True, True, True, True, True}}}},
 CellID->856829393],

Cell[TextData[{
 "The function has an option to return the particular transformation matrix \
",
 Cell[BoxData[
  FormBox["P", TraditionalForm]], "InlineMath"],
 "; use the command ",
 Cell[BoxData[
  RowBox[{"\"\<ReturnP\>\"", "\[Rule]", 
   TemplateBox[{
     Cell[
      TextData["True"]], "paclet:ref/True"},
    "RefLink",
    BaseStyle->{"InlineFormula"}]}]], "InlineFormula"],
 ". Default setting is ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["False"]], "paclet:ref/False"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". If this matrix is returned, the transformation is not carried out. By \
setting ",
 Cell[BoxData[
  RowBox[{"\"\<ReturnP\>\"", "\[Rule]", 
   TemplateBox[{
     Cell[
      TextData["All"]], "paclet:ref/All"},
    "RefLink",
    BaseStyle->{"InlineFormula"}]}]], "InlineFormula"],
 ", a list of all the matrices comprising the final transformation matrix ",
 Cell[BoxData[
  FormBox["P", TraditionalForm]], "InlineMath"],
 " will be returned."
}], "Notes",
 CellID->2119178073],

Cell[TextData[{
 "As an alternative to specifying the setting, one can enter the target space \
group, and the function will automatically find the correct settings (e.g. ",
 Cell[BoxData["\"\<P 1 21/n 1\>\""], "InlineFormula"],
 " has unique axis ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]], "InlineMath"],
 " and cell choice ",
 Cell[BoxData[
  FormBox["2", TraditionalForm]], "InlineMath"],
 "). One can also use the unique Hall symbol."
}], "Notes",
 CellID->266054275],

Cell[TextData[{
 "Applying this function will mutate the ",
 Cell[BoxData[
  StyleBox["crystal", "TI"]], "InlineFormula"],
 " entry in ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["$CrystalData"]], "paclet:MaXrd/ref/$CrystalData"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 " with the transformed values."
}], "Notes",
 CellID->158694970],

Cell[TextData[{
 "The settings are not case sensitive. One can also for instance use ",
 Cell[BoxData[
 "\"\<A\!\(\*OverscriptBox[\(C\), \(_\)]\)B\>\""], "InlineFormula"],
 ", ",
 Cell[BoxData[
 "\"\<a\!\(\*OverscriptBox[\(c\), \(_\)]\)b\>\""], "InlineFormula"],
 " or ",
 Cell[BoxData["\"\<A-CB\>\""], "InlineFormula"],
 " instead of ",
 Cell[BoxData["\"\<a-cb\>"], "InlineFormula"],
 "\"."
}], "Notes",
 CellID->344559116],

Cell[TextData[{
 "When a crystal entry is transformed to a special multiple cell or a \
different cell centring, information about this will be added to the ",
 Cell[BoxData["\"\<Notes\>\""], "InlineFormula"],
 " sub-entry in ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["$CrystalData"]], "paclet:MaXrd/ref/$CrystalData"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula"],
 ". If the crystal entry is transformed again later, this information will be \
used to ascertain the correct starting position."
}], "Notes",
 CellID->465380681],

Cell["", "SectionFooterSpacer"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]]],
 "Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(8)", "ExampleCount"]
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CellTags->"PrimaryExamplesSection",
 CellID->226878532],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->1364013899],

Cell[TextData[{
 "Let us import data on the crystal ",
 StyleBox["ferrocene",
  FontSlant->"Italic"],
 ":"
}], "ExampleText",
 CellID->1457080377],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cif", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "$MaXrdPath", ",", "\"\<ExampleFiles\>\"", ",", "\"\<CIF\>\"", ",", 
      "\"\<Ferrocene.cif\>\""}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ImportCrystalData", "[", "cif", "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->1813829567],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"ChemicalFormula\"\>", 
    "\[Rule]", "\<\"\\!\\(\\*SubscriptBox[\\(C\\), \
\\(10\\)]\\)\\!\\(\\*SubscriptBox[\\(H\\), \\(10\\)]\\)Fe\"\>"}], ",", 
   RowBox[{"\<\"FormulaUnits\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"SpaceGroup\"\>", 
    "\[Rule]", "\<\"\\!\\(\\*SubscriptBox[\\(P2\\), \\(1\\)]\\)/n\"\>"}], ",", 
   RowBox[{"\<\"LatticeParameters\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"a\"\>", "\[Rule]", 
       TemplateBox[{
        "5.9285`", "\"\[CapitalARing]\"", "\[ARing]ngstr\[ODoubleDot]ms", 
         "\"Angstroms\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"b\"\>", "\[Rule]", 
       TemplateBox[{
        "7.612`", "\"\[CapitalARing]\"", "\[ARing]ngstr\[ODoubleDot]ms", 
         "\"Angstroms\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"c\"\>", "\[Rule]", 
       TemplateBox[{
        "9.041`", "\"\[CapitalARing]\"", "\[ARing]ngstr\[ODoubleDot]ms", 
         "\"Angstroms\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"\[Alpha]\"\>", "\[Rule]", 
       TemplateBox[{"90", 
         RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], "degrees", 
         "\"AngularDegrees\""},
        "QuantityPostfix"]}], ",", 
      RowBox[{"\<\"\[Beta]\"\>", "\[Rule]", 
       TemplateBox[{"93.156`", 
         RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], "degrees", 
         "\"AngularDegrees\""},
        "QuantityPostfix"]}], ",", 
      RowBox[{"\<\"\[Gamma]\"\>", "\[Rule]", 
       TemplateBox[{"90", 
         RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], "degrees", 
         "\"AngularDegrees\""},
        "QuantityPostfix"]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"Wavelength\"\>", "\[Rule]", 
    TemplateBox[{
     "0.69804`", "\"\[CapitalARing]\"", "\[ARing]ngstr\[ODoubleDot]ms", 
      "\"Angstroms\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"AtomData\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\[LeftSkeleton]", "11", "\[RightSkeleton]"}], "}"}]}]}], "}"}]],
  "Output",
 CellLabel->"Out[1]=",
 CellID->1377650363]
}, Open  ]],

Cell["\<\
Specify the transformation by the unique axis and cell choice of the target \
cell:\
\>", "ExampleText",
 CellID->1613748649],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitCellTransformation", "[", 
  RowBox[{"\"\<Ferrocene\>\"", ",", 
   RowBox[{"\"\<UniqueAxis\>\"", "\[Rule]", "\"\<a\>\""}], ",", 
   RowBox[{"\"\<CellChoice\>\"", "\[Rule]", "2"}]}], "]"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->1440470077],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"ChemicalFormula\"\>", 
    "\[Rule]", "\<\"\\!\\(\\*SubscriptBox[\\(C\\), \
\\(10\\)]\\)\\!\\(\\*SubscriptBox[\\(H\\), \\(10\\)]\\)Fe\"\>"}], ",", 
   RowBox[{"\<\"FormulaUnits\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"SpaceGroup\"\>", "\[Rule]", "\<\"P 21/n 1 1\"\>"}], ",", 
   RowBox[{"\<\"LatticeParameters\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"a\"\>", "\[Rule]", 
       TemplateBox[{
        "7.612`", "\"\[CapitalARing]\"", "\[ARing]ngstr\[ODoubleDot]ms", 
         "\"Angstroms\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"b\"\>", "\[Rule]", 
       TemplateBox[{
        "9.041`", "\"\[CapitalARing]\"", "\[ARing]ngstr\[ODoubleDot]ms", 
         "\"Angstroms\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"c\"\>", "\[Rule]", 
       TemplateBox[{
        "5.9285`", "\"\[CapitalARing]\"", "\[ARing]ngstr\[ODoubleDot]ms", 
         "\"Angstroms\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"\[Alpha]\"\>", "\[Rule]", 
       TemplateBox[{"93.156`", 
         RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], "degrees", 
         "\"AngularDegrees\""},
        "QuantityPostfix"]}], ",", 
      RowBox[{"\<\"\[Beta]\"\>", "\[Rule]", 
       TemplateBox[{"90", 
         RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], "degrees", 
         "\"AngularDegrees\""},
        "QuantityPostfix"]}], ",", 
      RowBox[{"\<\"\[Gamma]\"\>", "\[Rule]", 
       TemplateBox[{"90", 
         RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], "degrees", 
         "\"AngularDegrees\""},
        "QuantityPostfix"]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"Wavelength\"\>", "\[Rule]", 
    TemplateBox[{
     "0.69804`", "\"\[CapitalARing]\"", "\[ARing]ngstr\[ODoubleDot]ms", 
      "\"Angstroms\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"AtomData\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\[LeftSkeleton]", "11", "\[RightSkeleton]"}], "}"}]}]}], 
  "}"}]], "Output",
 CellLabel->"Out[2]=",
 CellID->968987]
}, Open  ]],

Cell[TextData[{
 "We can also enter the target space group, for example ",
 Cell[BoxData[
  FormBox[
   RowBox[{"P", "\[VeryThinSpace]", 
    RowBox[{
     SubscriptBox["2", "1"], "\[NegativeMediumSpace]", "/", "c"}]}], 
   TraditionalForm]], "InlineMath"],
 ":"
}], "ExampleText",
 CellID->83868485],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitCellTransformation", "[", 
  RowBox[{
  "\"\<Ferrocene\>\"", ",", "\"\<\!\(\*SubscriptBox[\(P2\), \(1\)]\)/c\>\""}],
   "]"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->651903697],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"ChemicalFormula\"\>", 
    "\[Rule]", "\<\"\\!\\(\\*SubscriptBox[\\(C\\), \
\\(10\\)]\\)\\!\\(\\*SubscriptBox[\\(H\\), \\(10\\)]\\)Fe\"\>"}], ",", 
   RowBox[{"\<\"FormulaUnits\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"SpaceGroup\"\>", 
    "\[Rule]", "\<\"\\!\\(\\*SubscriptBox[\\(P2\\), \\(1\\)]\\)/c\"\>"}], ",", 
   RowBox[{"\<\"LatticeParameters\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"a\"\>", "\[Rule]", 
       TemplateBox[{
        "9.041`", "\"\[CapitalARing]\"", "\[ARing]ngstr\[ODoubleDot]ms", 
         "\"Angstroms\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"b\"\>", "\[Rule]", 
       TemplateBox[{
        "7.612`", "\"\[CapitalARing]\"", "\[ARing]ngstr\[ODoubleDot]ms", 
         "\"Angstroms\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"c\"\>", "\[Rule]", 
       TemplateBox[{
        "10.534940555671229`", "\"\[CapitalARing]\"", 
         "\[ARing]ngstr\[ODoubleDot]ms", "\"Angstroms\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"\[Alpha]\"\>", "\[Rule]", 
       TemplateBox[{"90", 
         RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], "degrees", 
         "\"AngularDegrees\""},
        "QuantityPostfix"]}], ",", 
      RowBox[{"\<\"\[Beta]\"\>", "\[Rule]", 
       TemplateBox[{"145.81319317157215`", 
         RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], "degrees", 
         "\"AngularDegrees\""},
        "QuantityPostfix"]}], ",", 
      RowBox[{"\<\"\[Gamma]\"\>", "\[Rule]", 
       TemplateBox[{"90", 
         RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], "degrees", 
         "\"AngularDegrees\""},
        "QuantityPostfix"]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"Wavelength\"\>", "\[Rule]", 
    TemplateBox[{
     "0.69804`", "\"\[CapitalARing]\"", "\[ARing]ngstr\[ODoubleDot]ms", 
      "\"Angstroms\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"AtomData\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\[LeftSkeleton]", "11", "\[RightSkeleton]"}], "}"}]}]}], 
  "}"}]], "Output",
 CellLabel->"Out[3]=",
 CellID->1253378980]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Scope",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(3)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->1293636265],

Cell[TextData[{
 "Now we wish to work with the ",
 StyleBox["rhombohedral",
  FontSlant->"Italic"],
 " clathrate thiourea-ferrocene:"
}], "ExampleText",
 CellID->658661185],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cif", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "$MaXrdPath", ",", "\"\<ExampleFiles\>\"", ",", "\"\<CIF\>\"", ",", 
      "\"\<ThioureaFerrocene.cif\>\""}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ImportCrystalData", "[", "cif", "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->1014259112],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"ChemicalFormula\"\>", 
    "\[Rule]", "\<\"\\!\\(\\*SubscriptBox[\\(C\\), \
\\(13\\)]\\)\\!\\(\\*SubscriptBox[\\(H\\), \
\\(22\\)]\\)Fe\\!\\(\\*SubscriptBox[\\(N\\), \
\\(6\\)]\\)\\!\\(\\*SubscriptBox[\\(S\\), \\(3\\)]\\)\"\>"}], ",", 
   RowBox[{"\<\"FormulaUnits\"\>", "\[Rule]", "6"}], ",", 
   RowBox[{"\<\"SpaceGroup\"\>", 
    "\[Rule]", "\<\"R\\!\\(\\*OverscriptBox[\\(3\\), \\(_\\)]\\)c\"\>"}], ",", 
   RowBox[{"\<\"LatticeParameters\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"a\"\>", "\[Rule]", 
       TemplateBox[{
        "16.3249`", "\"\[CapitalARing]\"", "\[ARing]ngstr\[ODoubleDot]ms", 
         "\"Angstroms\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"b\"\>", "\[Rule]", 
       TemplateBox[{
        "16.3249`", "\"\[CapitalARing]\"", "\[ARing]ngstr\[ODoubleDot]ms", 
         "\"Angstroms\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"c\"\>", "\[Rule]", 
       TemplateBox[{
        "12.4163`", "\"\[CapitalARing]\"", "\[ARing]ngstr\[ODoubleDot]ms", 
         "\"Angstroms\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"\[Alpha]\"\>", "\[Rule]", 
       TemplateBox[{"90", 
         RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], "degrees", 
         "\"AngularDegrees\""},
        "QuantityPostfix"]}], ",", 
      RowBox[{"\<\"\[Beta]\"\>", "\[Rule]", 
       TemplateBox[{"90", 
         RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], "degrees", 
         "\"AngularDegrees\""},
        "QuantityPostfix"]}], ",", 
      RowBox[{"\<\"\[Gamma]\"\>", "\[Rule]", 
       TemplateBox[{"120", 
         RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], "degrees", 
         "\"AngularDegrees\""},
        "QuantityPostfix"]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"Wavelength\"\>", "\[Rule]", 
    TemplateBox[{
     "0.69804`", "\"\[CapitalARing]\"", "\[ARing]ngstr\[ODoubleDot]ms", 
      "\"Angstroms\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"AtomData\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\[LeftSkeleton]", "8", "\[RightSkeleton]"}], "}"}]}]}], 
  "}"}]], "Output",
 CellLabel->"Out[1]=",
 CellID->811337585]
}, Open  ]],

Cell["\<\
We see that it uses hexagonal axes. To use rhombohedral axes, we can do the \
following:\
\>", "ExampleText",
 CellID->2038090694],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitCellTransformation", "[", 
  RowBox[{"\"\<ThioureaFerrocene\>\"", ",", 
   RowBox[{"\"\<MultipleCell\>\"", "\[Rule]", "\"\<R\>\""}]}], "]"}]], "Input",\

 CellLabel->"In[2]:=",
 CellID->2075189145],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"ChemicalFormula\"\>", 
    "\[Rule]", "\<\"\\!\\(\\*SubscriptBox[\\(C\\), \
\\(13\\)]\\)\\!\\(\\*SubscriptBox[\\(H\\), \
\\(22\\)]\\)Fe\\!\\(\\*SubscriptBox[\\(N\\), \
\\(6\\)]\\)\\!\\(\\*SubscriptBox[\\(S\\), \\(3\\)]\\)\"\>"}], ",", 
   RowBox[{"\<\"FormulaUnits\"\>", "\[Rule]", "6"}], ",", 
   RowBox[{"\<\"SpaceGroup\"\>", 
    "\[Rule]", "\<\"R\\!\\(\\*OverscriptBox[\\(3\\), \\(_\\)]\\)c\"\>"}], ",", 
   RowBox[{"\<\"LatticeParameters\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"a\"\>", "\[Rule]", 
       TemplateBox[{
        "10.29385785429566`", "\"\[CapitalARing]\"", 
         "\[ARing]ngstr\[ODoubleDot]ms", "\"Angstroms\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"b\"\>", "\[Rule]", 
       TemplateBox[{
        "10.29385785429566`", "\"\[CapitalARing]\"", 
         "\[ARing]ngstr\[ODoubleDot]ms", "\"Angstroms\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"c\"\>", "\[Rule]", 
       TemplateBox[{
        "10.29385785429566`", "\"\[CapitalARing]\"", 
         "\[ARing]ngstr\[ODoubleDot]ms", "\"Angstroms\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"\[Alpha]\"\>", "\[Rule]", 
       TemplateBox[{"104.92292908076631`", 
         RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], "degrees", 
         "\"AngularDegrees\""},
        "QuantityPostfix"]}], ",", 
      RowBox[{"\<\"\[Beta]\"\>", "\[Rule]", 
       TemplateBox[{"104.92292908076631`", 
         RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], "degrees", 
         "\"AngularDegrees\""},
        "QuantityPostfix"]}], ",", 
      RowBox[{"\<\"\[Gamma]\"\>", "\[Rule]", 
       TemplateBox[{"104.92292908076631`", 
         RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], "degrees", 
         "\"AngularDegrees\""},
        "QuantityPostfix"]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"Wavelength\"\>", "\[Rule]", 
    TemplateBox[{
     "0.69804`", "\"\[CapitalARing]\"", "\[ARing]ngstr\[ODoubleDot]ms", 
      "\"Angstroms\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"AtomData\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\[LeftSkeleton]", "8", "\[RightSkeleton]"}], "}"}]}], ",", 
   RowBox[{"\<\"Notes\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{"\<\"MultipleCell\"\>", "\[Rule]", "\<\"R\"\>"}], 
     "\[RightAssociation]"}]}]}], "}"}]], "Output",
 CellLabel->"Out[2]=",
 CellID->693347646]
}, Open  ]],

Cell[TextData[{
 "To transform back, we can either use ",
 Cell[BoxData[
  RowBox[{"\"\<MultipleCell\>\"", "\[Rule]", "\"\<R1\>\""}]], "InlineFormula"],
 " or omit any specifications which will return the crystal to the default \
setting of the space group. "
}], "ExampleText",
 CellID->341963236],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitCellTransformation", "[", "\"\<ThioureaFerrocene\>\"", 
  "]"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->1710381513],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"ChemicalFormula\"\>", 
    "\[Rule]", "\<\"\\!\\(\\*SubscriptBox[\\(C\\), \
\\(13\\)]\\)\\!\\(\\*SubscriptBox[\\(H\\), \
\\(22\\)]\\)Fe\\!\\(\\*SubscriptBox[\\(N\\), \
\\(6\\)]\\)\\!\\(\\*SubscriptBox[\\(S\\), \\(3\\)]\\)\"\>"}], ",", 
   RowBox[{"\<\"FormulaUnits\"\>", "\[Rule]", "6"}], ",", 
   RowBox[{"\<\"SpaceGroup\"\>", 
    "\[Rule]", "\<\"R\\!\\(\\*OverscriptBox[\\(3\\), \\(_\\)]\\)c\"\>"}], ",", 
   RowBox[{"\<\"LatticeParameters\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"a\"\>", "\[Rule]", 
       TemplateBox[{
        "16.324899999999996`", "\"\[CapitalARing]\"", 
         "\[ARing]ngstr\[ODoubleDot]ms", "\"Angstroms\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"b\"\>", "\[Rule]", 
       TemplateBox[{
        "16.324899999999996`", "\"\[CapitalARing]\"", 
         "\[ARing]ngstr\[ODoubleDot]ms", "\"Angstroms\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"c\"\>", "\[Rule]", 
       TemplateBox[{
        "12.416300000000005`", "\"\[CapitalARing]\"", 
         "\[ARing]ngstr\[ODoubleDot]ms", "\"Angstroms\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"\[Alpha]\"\>", "\[Rule]", 
       TemplateBox[{"90", 
         RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], "degrees", 
         "\"AngularDegrees\""},
        "QuantityPostfix"]}], ",", 
      RowBox[{"\<\"\[Beta]\"\>", "\[Rule]", 
       TemplateBox[{"90", 
         RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], "degrees", 
         "\"AngularDegrees\""},
        "QuantityPostfix"]}], ",", 
      RowBox[{"\<\"\[Gamma]\"\>", "\[Rule]", 
       TemplateBox[{"120", 
         RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], "degrees", 
         "\"AngularDegrees\""},
        "QuantityPostfix"]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"Wavelength\"\>", "\[Rule]", 
    TemplateBox[{
     "0.69804`", "\"\[CapitalARing]\"", "\[ARing]ngstr\[ODoubleDot]ms", 
      "\"Angstroms\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"AtomData\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\[LeftSkeleton]", "8", "\[RightSkeleton]"}], "}"}]}]}], 
  "}"}]], "Output",
 CellLabel->"Out[3]=",
 CellID->964215521]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->1957161973],

Cell["\<\
In this example, we will see how the fractional coordinates change after the \
transformation. We will be using the diamond structure of carbon in this \
example:\
\>", "ExampleText",
 CellID->166875052],

Cell[BoxData[
 RowBox[{
  RowBox[{"crystal", "=", "\"\<Diamond\>\""}], ";"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->527034049],

Cell["\<\
Initial values for the space group and the atom of the asymmetric unit:\
\>", "ExampleText",
 CellID->734494782],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"CheckData", "[", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"$CrystalData", "\[LeftDoubleBracket]", 
      RowBox[{"crystal", ",", 
       RowBox[{"Sequence", "@@", "#"}]}], "\[RightDoubleBracket]"}], "&"}], "/@", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\"\<SpaceGroup\>\"", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<AtomData\>\"", ",", "1", ",", "\"\<FractionalCoordinates\>\""}], 
       "}"}]}], "\[IndentingNewLine]", "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"CheckData", "[", "]"}]}], "Input",
 CellLabel->"In[2]:=",
 CellID->671089335],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Fd\\!\\(\\*OverscriptBox[\\(3\\), \\(_\\)]\\)m:2\"\>", ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "8"], ",", 
     FractionBox["1", "8"], ",", 
     FractionBox["1", "8"]}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[2]=",
 CellID->1593148960]
}, Open  ]],

Cell["The unit cell looks like:", "ExampleText",
 CellID->1205842415],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"CheckPlot", "[", "]"}], ":=", 
   RowBox[{"CrystalPlot", "[", 
    RowBox[{"crystal", ",", 
     RowBox[{"\"\<StructureSize\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"CheckPlot", "[", "]"}]}], "Input",
 CellLabel->"In[3]:=",
 CellID->283717796],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[1, 0, 0], Arrow3DBox[Line3DBox[{{0, 0, 0}, {3.567, 0, 0}}]]}, 
   {RGBColor[0, 1, 0], Arrow3DBox[Line3DBox[{{0, 0, 0}, {0., 3.567, 0}}]]}, 
   {RGBColor[0, 0, 1], Arrow3DBox[Line3DBox[{{0, 0, 0}, {0., 0., 3.567}}]]}, 
   {GrayLevel[0], Line3DBox[{{0., 3.567, 0.}, {3.567, 3.567, 0.}}]}, 
   {GrayLevel[0], Line3DBox[{{3.567, 0., 0.}, {3.567, 3.567, 0.}}]}, 
   {GrayLevel[0], Line3DBox[{{3.567, 0., 0.}, {3.567, 0., 3.567}}]}, 
   {GrayLevel[0], Line3DBox[{{0., 3.567, 0.}, {0., 3.567, 3.567}}]}, 
   {GrayLevel[0], Line3DBox[{{3.567, 3.567, 0.}, {3.567, 3.567, 3.567}}]}, 
   {GrayLevel[0], Line3DBox[{{0., 0., 3.567}, {3.567, 0., 3.567}}]}, 
   {GrayLevel[0], Line3DBox[{{0., 0., 3.567}, {0., 3.567, 3.567}}]}, 
   {GrayLevel[0], Line3DBox[{{0., 3.567, 3.567}, {3.567, 3.567, 3.567}}]}, 
   {GrayLevel[0], Line3DBox[{{3.567, 0., 3.567}, {3.567, 3.567, 3.567}}]}, 
   {RGBColor[0.4, 0.4, 0.4], 
    SphereBox[{{0.445875, 0.445875, 0.445875}, {2.229375, 0.445875, 
     2.229375}, {0.445875, 2.229375, 2.229375}, {2.229375, 2.229375, 
     0.445875}, {3.121125, 1.337625, 1.337625}, {3.121125, 3.121125, 
     3.121125}, {1.337625, 1.337625, 3.121125}, {1.337625, 3.121125, 
     1.337625}}, 0.67]}},
  ControllerMethod -> Automatic,
  AlignmentPoint->Center,
  AspectRatio->Automatic,
  Axes->False,
  AxesEdge->Automatic,
  AxesLabel->None,
  AxesOrigin->Automatic,
  AxesStyle->{},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  BoxRatios->Automatic,
  BoxStyle->{},
  Boxed->False,
  ClipPlanes->None,
  ClipPlanesStyle->Automatic,
  ColorOutput->Automatic,
  ContentSelectable->Automatic,
  ControllerLinking->Automatic,
  ControllerPath->Automatic,
  CoordinatesToolOptions:>Automatic,
  DisplayFunction->Identity,
  Epilog->{},
  FaceGrids->None,
  FaceGridsStyle->{},
  FormatType->TraditionalForm,
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->Automatic,
  ImageSizeRaw->Automatic,
  LabelStyle->{},
  Lighting->"Neutral",
  Method->Automatic,
  PlotLabel->None,
  PlotRange->All,
  PlotRangePadding->Automatic,
  PlotRegion->Automatic,
  PreserveImageOptions->Automatic,
  Prolog->{},
  RotationAction->"Fit",
  SphericalRegion->True,
  Ticks->Automatic,
  TicksStyle->{},
  TouchscreenAutoZoom->False,
  ViewAngle->Automatic,
  ViewCenter->Automatic,
  ViewMatrix->Automatic,
  ViewPoint->{1.3, -2.4, 2.},
  ViewProjection->Automatic,
  ViewRange->All,
  ViewVector->Automatic,
  ViewVertical->{0, 0, 1}]], "Output",
 CellLabel->"Out[3]=",
 CellID->1228459924]
}, Open  ]],

Cell["\<\
Transforming to the other cell origin, here by setting the target space group \
symbol:\
\>", "ExampleText",
 CellID->1680932570],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitCellTransformation", "[", 
  RowBox[{"crystal", ",", "\"\<Fd-3m\>\""}], "]"}]], "Input",
 CellLabel->"In[4]:=",
 CellID->1279422874],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"ChemicalFormula\"\>", "\[Rule]", "\<\"C\"\>"}], ",", 
   RowBox[{"\<\"SpaceGroup\"\>", 
    "\[Rule]", "\<\"Fd\\!\\(\\*OverscriptBox[\\(3\\), \\(_\\)]\\)m\"\>"}], 
   ",", 
   RowBox[{"\<\"LatticeParameters\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"a\"\>", "\[Rule]", 
       TemplateBox[{
        "3.567`", "\"\[CapitalARing]\"", "\[ARing]ngstr\[ODoubleDot]ms", 
         "\"Angstroms\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"b\"\>", "\[Rule]", 
       TemplateBox[{
        "3.567`", "\"\[CapitalARing]\"", "\[ARing]ngstr\[ODoubleDot]ms", 
         "\"Angstroms\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"c\"\>", "\[Rule]", 
       TemplateBox[{
        "3.567`", "\"\[CapitalARing]\"", "\[ARing]ngstr\[ODoubleDot]ms", 
         "\"Angstroms\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"\[Alpha]\"\>", "\[Rule]", 
       TemplateBox[{"90", 
         RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], "degrees", 
         "\"AngularDegrees\""},
        "QuantityPostfix"]}], ",", 
      RowBox[{"\<\"\[Beta]\"\>", "\[Rule]", 
       TemplateBox[{"90", 
         RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], "degrees", 
         "\"AngularDegrees\""},
        "QuantityPostfix"]}], ",", 
      RowBox[{"\<\"\[Gamma]\"\>", "\[Rule]", 
       TemplateBox[{"90", 
         RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], "degrees", 
         "\"AngularDegrees\""},
        "QuantityPostfix"]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"AtomData\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], "}"}]}]}], 
  "}"}]], "Output",
 CellLabel->"Out[4]=",
 CellID->818160410]
}, Open  ]],

Cell["Let us check the updated coordinates and unit cell:", "ExampleText",
 CellID->2026203058],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CheckData", "[", "]"}]], "Input",
 CellLabel->"In[5]:=",
 CellID->1865658678],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Fd\\!\\(\\*OverscriptBox[\\(3\\), \\(_\\)]\\)m\"\>", ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[5]=",
 CellID->484219129]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CheckPlot", "[", "]"}]], "Input",
 CellLabel->"In[6]:=",
 CellID->885182825],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[1, 0, 0], Arrow3DBox[Line3DBox[{{0, 0, 0}, {3.567, 0, 0}}]]}, 
   {RGBColor[0, 1, 0], Arrow3DBox[Line3DBox[{{0, 0, 0}, {0., 3.567, 0}}]]}, 
   {RGBColor[0, 0, 1], Arrow3DBox[Line3DBox[{{0, 0, 0}, {0., 0., 3.567}}]]}, 
   {GrayLevel[0], Line3DBox[{{0., 3.567, 0.}, {3.567, 3.567, 0.}}]}, 
   {GrayLevel[0], Line3DBox[{{3.567, 0., 0.}, {3.567, 3.567, 0.}}]}, 
   {GrayLevel[0], Line3DBox[{{3.567, 0., 0.}, {3.567, 0., 3.567}}]}, 
   {GrayLevel[0], Line3DBox[{{0., 3.567, 0.}, {0., 3.567, 3.567}}]}, 
   {GrayLevel[0], Line3DBox[{{3.567, 3.567, 0.}, {3.567, 3.567, 3.567}}]}, 
   {GrayLevel[0], Line3DBox[{{0., 0., 3.567}, {3.567, 0., 3.567}}]}, 
   {GrayLevel[0], Line3DBox[{{0., 0., 3.567}, {0., 3.567, 3.567}}]}, 
   {GrayLevel[0], Line3DBox[{{0., 3.567, 3.567}, {3.567, 3.567, 3.567}}]}, 
   {GrayLevel[0], Line3DBox[{{3.567, 0., 3.567}, {3.567, 3.567, 3.567}}]}, 
   {RGBColor[0.4, 0.4, 0.4], SphereBox[CompressedData["
1:eJxTTMoPSmViYGAQAmJmBsLgw/Jj3uadf+xx0ejq0Plf/l6peJnG6gDhv8Hg
46Jh6nDRMHXY3cvjgN29PA7o6rD7E6Efu7kImlL7cZmHSx4A0Q+pSQ==
     "], 0.67]}},
  ControllerMethod -> Automatic,
  AlignmentPoint->Center,
  AspectRatio->Automatic,
  Axes->False,
  AxesEdge->Automatic,
  AxesLabel->None,
  AxesOrigin->Automatic,
  AxesStyle->{},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  BoxRatios->Automatic,
  BoxStyle->{},
  Boxed->False,
  ClipPlanes->None,
  ClipPlanesStyle->Automatic,
  ColorOutput->Automatic,
  ContentSelectable->Automatic,
  ControllerLinking->Automatic,
  ControllerPath->Automatic,
  CoordinatesToolOptions:>Automatic,
  DisplayFunction->Identity,
  Epilog->{},
  FaceGrids->None,
  FaceGridsStyle->{},
  FormatType->TraditionalForm,
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->Automatic,
  ImageSizeRaw->Automatic,
  LabelStyle->{},
  Lighting->"Neutral",
  Method->Automatic,
  PlotLabel->None,
  PlotRange->All,
  PlotRangePadding->Automatic,
  PlotRegion->Automatic,
  PreserveImageOptions->Automatic,
  Prolog->{},
  RotationAction->"Fit",
  SphericalRegion->True,
  Ticks->Automatic,
  TicksStyle->{},
  TouchscreenAutoZoom->False,
  ViewAngle->Automatic,
  ViewCenter->Automatic,
  ViewMatrix->Automatic,
  ViewPoint->{1.3, -2.4, 2.},
  ViewProjection->Automatic,
  ViewRange->All,
  ViewVector->Automatic,
  ViewVertical->{0, 0, 1}]], "Output",
 CellLabel->"Out[6]=",
 CellID->1455362620]
}, Open  ]],

Cell["\<\
Transforming back to the previous setting, here by specifying the cell origin \
setting/value:\
\>", "ExampleText",
 CellID->1665431182],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitCellTransformation", "[", 
  RowBox[{"crystal", ",", 
   RowBox[{"\"\<CellOrigin\>\"", "\[Rule]", "2"}]}], "]"}]], "Input",
 CellLabel->"In[7]:=",
 CellID->269201022],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"ChemicalFormula\"\>", "\[Rule]", "\<\"C\"\>"}], ",", 
   RowBox[{"\<\"SpaceGroup\"\>", 
    "\[Rule]", "\<\"Fd\\!\\(\\*OverscriptBox[\\(3\\), \\(_\\)]\\)m:2\"\>"}], 
   ",", 
   RowBox[{"\<\"LatticeParameters\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"a\"\>", "\[Rule]", 
       TemplateBox[{
        "3.567`", "\"\[CapitalARing]\"", "\[ARing]ngstr\[ODoubleDot]ms", 
         "\"Angstroms\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"b\"\>", "\[Rule]", 
       TemplateBox[{
        "3.567`", "\"\[CapitalARing]\"", "\[ARing]ngstr\[ODoubleDot]ms", 
         "\"Angstroms\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"c\"\>", "\[Rule]", 
       TemplateBox[{
        "3.567`", "\"\[CapitalARing]\"", "\[ARing]ngstr\[ODoubleDot]ms", 
         "\"Angstroms\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"\[Alpha]\"\>", "\[Rule]", 
       TemplateBox[{"90", 
         RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], "degrees", 
         "\"AngularDegrees\""},
        "QuantityPostfix"]}], ",", 
      RowBox[{"\<\"\[Beta]\"\>", "\[Rule]", 
       TemplateBox[{"90", 
         RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], "degrees", 
         "\"AngularDegrees\""},
        "QuantityPostfix"]}], ",", 
      RowBox[{"\<\"\[Gamma]\"\>", "\[Rule]", 
       TemplateBox[{"90", 
         RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], "degrees", 
         "\"AngularDegrees\""},
        "QuantityPostfix"]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"AtomData\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], "}"}]}]}], 
  "}"}]], "Output",
 CellLabel->"Out[7]=",
 CellID->440815010]
}, Open  ]],

Cell["We will find that the coordinates are the same as before:", \
"ExampleText",
 CellID->1354264927],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CheckData", "[", "]"}]], "Input",
 CellLabel->"In[8]:=",
 CellID->1078879983],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Fd\\!\\(\\*OverscriptBox[\\(3\\), \\(_\\)]\\)m:2\"\>", ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "8"], ",", 
     FractionBox["1", "8"], ",", 
     FractionBox["1", "8"]}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[8]=",
 CellID->2106774567]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->1415114360],

Cell[TextData[{
 "Let us reload the ",
 StyleBox[".cif", "Program"],
 " file for ferrocene, in case it has been altered already."
}], "ExampleText",
 CellID->1236632999],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cif", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "$MaXrdPath", ",", "\"\<ExampleFiles\>\"", ",", "\"\<CIF\>\"", ",", 
      "\"\<Ferrocene.cif\>\""}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ImportCrystalData", "[", "cif", "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->44268505],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"ChemicalFormula\"\>", 
    "\[Rule]", "\<\"\\!\\(\\*SubscriptBox[\\(C\\), \
\\(10\\)]\\)\\!\\(\\*SubscriptBox[\\(H\\), \\(10\\)]\\)Fe\"\>"}], ",", 
   RowBox[{"\<\"FormulaUnits\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"SpaceGroup\"\>", 
    "\[Rule]", "\<\"\\!\\(\\*SubscriptBox[\\(P2\\), \\(1\\)]\\)/n\"\>"}], ",", 
   RowBox[{"\<\"LatticeParameters\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"a\"\>", "\[Rule]", 
       TemplateBox[{
        "5.9285`", "\"\[CapitalARing]\"", "\[ARing]ngstr\[ODoubleDot]ms", 
         "\"Angstroms\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"b\"\>", "\[Rule]", 
       TemplateBox[{
        "7.612`", "\"\[CapitalARing]\"", "\[ARing]ngstr\[ODoubleDot]ms", 
         "\"Angstroms\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"c\"\>", "\[Rule]", 
       TemplateBox[{
        "9.041`", "\"\[CapitalARing]\"", "\[ARing]ngstr\[ODoubleDot]ms", 
         "\"Angstroms\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"\[Alpha]\"\>", "\[Rule]", 
       TemplateBox[{"90", 
         RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], "degrees", 
         "\"AngularDegrees\""},
        "QuantityPostfix"]}], ",", 
      RowBox[{"\<\"\[Beta]\"\>", "\[Rule]", 
       TemplateBox[{"93.156`", 
         RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], "degrees", 
         "\"AngularDegrees\""},
        "QuantityPostfix"]}], ",", 
      RowBox[{"\<\"\[Gamma]\"\>", "\[Rule]", 
       TemplateBox[{"90", 
         RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], "degrees", 
         "\"AngularDegrees\""},
        "QuantityPostfix"]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"Wavelength\"\>", "\[Rule]", 
    TemplateBox[{
     "0.69804`", "\"\[CapitalARing]\"", "\[ARing]ngstr\[ODoubleDot]ms", 
      "\"Angstroms\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"AtomData\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\[LeftSkeleton]", "11", "\[RightSkeleton]"}], "}"}]}]}], "}"}]],
  "Output",
 CellLabel->"Out[1]=",
 CellID->849775833]
}, Open  ]],

Cell[TextData[{
 "Note that it has the space group ",
 Cell[BoxData[
  FormBox[
   RowBox[{"P", "\[VeryThinSpace]", 
    RowBox[{
     SubscriptBox["2", "1"], "\[NegativeMediumSpace]", "/", "n"}]}], 
   TraditionalForm]], "InlineMath"],
 ":"
}], "ExampleText",
 CellID->1190426388],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "@", 
  RowBox[{"$CrystalData", "[", 
   RowBox[{"[", 
    RowBox[{"\"\<Ferrocene\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<SpaceGroup\>\"", ",", "\"\<LatticeParameters\>\""}], 
      "}"}]}], "]"}], "]"}]}]], "Input",
 CellLabel->"In[2]:=",
 CellID->1646173065],

Cell[BoxData[
 TemplateBox[{
   TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "DisplayedRowCount" -> 20, "RowCount" -> 20, "Length" -> 2, 
        "InitialType" -> 
        TypeSystem`Struct[{"SpaceGroup", "LatticeParameters"}, {
           TypeSystem`Atom[String], 
           
           TypeSystem`Struct[{
            "a", "b", "c", "\[Alpha]", "\[Beta]", "\[Gamma]"}, {
             TypeSystem`Atom[
              Quantity[1, "Angstroms"]], 
             TypeSystem`Atom[
              Quantity[1, "Angstroms"]], 
             TypeSystem`Atom[
              Quantity[1, "Angstroms"]], 
             TypeSystem`Atom[
              Quantity[1, "AngularDegrees"]], 
             TypeSystem`Atom[
              Quantity[1, "AngularDegrees"]], 
             TypeSystem`Atom[
              Quantity[1, "AngularDegrees"]]}]}], "DisplayedColumnCount" -> 
        20, "DataRowCount" -> 0, "Shape" -> 
        TypeSystem`PackageScope`DocumentShape[
          
          Association[{"SpaceGroup"} -> 
           TypeSystem`PackageScope`AtomShape[278.40000000000003`], {
            "LatticeParameters", "a"} -> 
           TypeSystem`PackageScope`AtomShape[75], {"LatticeParameters", "b"} -> 
           TypeSystem`PackageScope`AtomShape[75], {"LatticeParameters", "c"} -> 
           TypeSystem`PackageScope`AtomShape[75], {
            "LatticeParameters", "\[Alpha]"} -> 
           TypeSystem`PackageScope`AtomShape[75], {
            "LatticeParameters", "\[Beta]"} -> 
           TypeSystem`PackageScope`AtomShape[75], {
            "LatticeParameters", "\[Gamma]"} -> 
           TypeSystem`PackageScope`AtomShape[75]], 2], "DataColumnCount" -> 0,
         "InitialData" -> TypeSystem`PackageScope`CacheHandle[1645780489], 
        "Type" -> TypeSystem`Struct[{"SpaceGroup", "LatticeParameters"}, {
           TypeSystem`Atom[String], 
           
           TypeSystem`Struct[{
            "a", "b", "c", "\[Alpha]", "\[Beta]", "\[Gamma]"}, {
             TypeSystem`Atom[
              Quantity[1, "Angstroms"]], 
             TypeSystem`Atom[
              Quantity[1, "Angstroms"]], 
             TypeSystem`Atom[
              Quantity[1, "Angstroms"]], 
             TypeSystem`Atom[
              Quantity[1, "AngularDegrees"]], 
             TypeSystem`Atom[
              Quantity[1, "AngularDegrees"]], 
             TypeSystem`Atom[
              Quantity[1, "AngularDegrees"]]}]}], "HandleQ" -> True, 
        "Meta" -> {}, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[1645780489]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SpaceGroup\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SpaceGroup\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1700675329][{"SpaceGroup"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1700675329][
                  GeneralUtilities`Slice["SpaceGroup"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], SpanFromLeft, 
               Pane[
                Annotation["\!\(\*SubscriptBox[\(P2\), \(1\)]\)/n", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1700675329][
                  GeneralUtilities`Slice["SpaceGroup"]], "Mouse"], 
                ImageSize -> {{278.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"LatticeParameters\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"LatticeParameters\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1700675329][{"LatticeParameters", "a"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1700675329][
                  GeneralUtilities`Slice["LatticeParameters", "a"]], "Mouse"],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"a\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"a\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1700675329][{"LatticeParameters", "a"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1700675329][
                  GeneralUtilities`Slice["LatticeParameters", "a"]], "Mouse"],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"5.9285`", "\"\[CapitalARing]\""}], FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1700675329][
                  GeneralUtilities`Slice["LatticeParameters", "a"]], "Mouse"],
                 ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"b\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"b\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1700675329][{"LatticeParameters", "b"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1700675329][
                  GeneralUtilities`Slice["LatticeParameters", "b"]], "Mouse"],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"7.612`", "\"\[CapitalARing]\""}], FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1700675329][
                  GeneralUtilities`Slice["LatticeParameters", "b"]], "Mouse"],
                 ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"c\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"c\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1700675329][{"LatticeParameters", "c"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1700675329][
                  GeneralUtilities`Slice["LatticeParameters", "c"]], "Mouse"],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"9.041`", "\"\[CapitalARing]\""}], FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1700675329][
                  GeneralUtilities`Slice["LatticeParameters", "c"]], "Mouse"],
                 ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"\[Alpha]\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"\[Alpha]\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1700675329][{"LatticeParameters", "\[Alpha]"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1700675329][
                  GeneralUtilities`Slice["LatticeParameters", "\[Alpha]"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TemplateBox[{"90", 
                    RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], "degrees",
                     "\"AngularDegrees\""}, "QuantityPostfix", SyntaxForm -> 
                    Mod], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1700675329][
                  GeneralUtilities`Slice["LatticeParameters", "\[Alpha]"]], 
                 "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"\[Beta]\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"\[Beta]\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1700675329][{"LatticeParameters", "\[Beta]"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1700675329]
                 [
                  GeneralUtilities`Slice["LatticeParameters", "\[Beta]"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TemplateBox[{"93.156`", 
                    RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], "degrees",
                     "\"AngularDegrees\""}, "QuantityPostfix", SyntaxForm -> 
                    Mod], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1700675329][
                  GeneralUtilities`Slice["LatticeParameters", "\[Beta]"]], 
                 "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"\[Gamma]\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"\[Gamma]\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1700675329][{"LatticeParameters", "\[Gamma]"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1700675329][
                  GeneralUtilities`Slice["LatticeParameters", "\[Gamma]"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TemplateBox[{"90", 
                    RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], "degrees",
                     "\"AngularDegrees\""}, "QuantityPostfix", SyntaxForm -> 
                    Mod], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1700675329][
                  GeneralUtilities`Slice["LatticeParameters", "\[Gamma]"]], 
                 "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1700675329][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1700675329]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1700675329][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1700675329][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {437., {93.3544921875, 98.6455078125}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellLabel->"Out[2]=",
 CellID->1416172681]
}, Open  ]],

Cell[TextData[{
 "Let us transform to the unit cell corresponding to ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["P2", "1"], "/", "c"}]], "InlineFormula"],
 ":"
}], "ExampleText",
 CellID->668713251],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"UnitCellTransformation", "[", 
   RowBox[{
   "\"\<Ferrocene\>\"", ",", 
    "\"\<\!\(\*SubscriptBox[\(P2\), \(1\)]\)/c\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dataset", "@", 
  RowBox[{"$CrystalData", "[", 
   RowBox[{"[", 
    RowBox[{"\"\<Ferrocene\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<SpaceGroup\>\"", ",", "\"\<LatticeParameters\>\""}], 
      "}"}]}], "]"}], "]"}]}]}], "Input",
 CellLabel->"In[3]:=",
 CellID->1361270022],

Cell[BoxData[
 TemplateBox[{
   TagBox[
    DynamicModuleBox[{
     TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
      Data`UnorderedAssociation[
       "DisplayedRowCount" -> 20, "RowCount" -> 20, "Length" -> 2, 
        "InitialType" -> 
        TypeSystem`Struct[{"SpaceGroup", "LatticeParameters"}, {
           TypeSystem`Atom[String], 
           
           TypeSystem`Struct[{
            "a", "b", "c", "\[Alpha]", "\[Beta]", "\[Gamma]"}, {
             TypeSystem`Atom[
              Quantity[1, "Angstroms"]], 
             TypeSystem`Atom[
              Quantity[1, "Angstroms"]], 
             TypeSystem`Atom[
              Quantity[1, "Angstroms"]], 
             TypeSystem`Atom[
              Quantity[1, "AngularDegrees"]], 
             TypeSystem`Atom[
              Quantity[1, "AngularDegrees"]], 
             TypeSystem`Atom[
              Quantity[1, "AngularDegrees"]]}]}], "DisplayedColumnCount" -> 
        20, "DataRowCount" -> 0, "Shape" -> 
        TypeSystem`PackageScope`DocumentShape[
          
          Association[{"SpaceGroup"} -> 
           TypeSystem`PackageScope`AtomShape[278.40000000000003`], {
            "LatticeParameters", "a"} -> 
           TypeSystem`PackageScope`AtomShape[75], {"LatticeParameters", "b"} -> 
           TypeSystem`PackageScope`AtomShape[75], {"LatticeParameters", "c"} -> 
           TypeSystem`PackageScope`AtomShape[75], {
            "LatticeParameters", "\[Alpha]"} -> 
           TypeSystem`PackageScope`AtomShape[75], {
            "LatticeParameters", "\[Beta]"} -> 
           TypeSystem`PackageScope`AtomShape[75], {
            "LatticeParameters", "\[Gamma]"} -> 
           TypeSystem`PackageScope`AtomShape[75]], 2], "DataColumnCount" -> 0,
         "InitialData" -> TypeSystem`PackageScope`CacheHandle[822995265], 
        "Type" -> TypeSystem`Struct[{"SpaceGroup", "LatticeParameters"}, {
           TypeSystem`Atom[String], 
           
           TypeSystem`Struct[{
            "a", "b", "c", "\[Alpha]", "\[Beta]", "\[Gamma]"}, {
             TypeSystem`Atom[
              Quantity[1, "Angstroms"]], 
             TypeSystem`Atom[
              Quantity[1, "Angstroms"]], 
             TypeSystem`Atom[
              Quantity[1, "Angstroms"]], 
             TypeSystem`Atom[
              Quantity[1, "AngularDegrees"]], 
             TypeSystem`Atom[
              Quantity[1, "AngularDegrees"]], 
             TypeSystem`Atom[
              Quantity[1, "AngularDegrees"]]}]}], "HandleQ" -> True, 
        "Meta" -> {}, "RowTarget" -> 20, "Data" -> 
        TypeSystem`PackageScope`CacheHandle[822995265]], 
      TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
      TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
      TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
      DynamicModule[{
        TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
           Style[
            Grid[{{
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SpaceGroup\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"SpaceGroup\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1714293336][{"SpaceGroup"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1714293336][
                  GeneralUtilities`Slice["SpaceGroup"]], "Mouse"], Background -> 
                GrayLevel[0.95], Alignment -> {Left, Baseline}], SpanFromLeft, 
               Pane[
                Annotation["\!\(\*SubscriptBox[\(P2\), \(1\)]\)/c", 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1714293336][
                  GeneralUtilities`Slice["SpaceGroup"]], "Mouse"], 
                ImageSize -> {{278.40000000000003`, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"LatticeParameters\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"LatticeParameters\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1714293336][{"LatticeParameters", "a"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1714293336][
                  GeneralUtilities`Slice["LatticeParameters", "a"]], "Mouse"],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"a\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"a\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1714293336][{"LatticeParameters", "a"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1714293336][
                  GeneralUtilities`Slice["LatticeParameters", "a"]], "Mouse"],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"9.041`", "\"\[CapitalARing]\""}], FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1714293336][
                  GeneralUtilities`Slice["LatticeParameters", "a"]], "Mouse"],
                 ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"b\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"b\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1714293336][{"LatticeParameters", "b"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1714293336][
                  GeneralUtilities`Slice["LatticeParameters", "b"]], "Mouse"],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"7.612`", "\"\[CapitalARing]\""}], FontColor -> 
                   RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1714293336][
                  GeneralUtilities`Slice["LatticeParameters", "b"]], "Mouse"],
                 ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"c\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"c\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1714293336][{"LatticeParameters", "c"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1714293336][
                  GeneralUtilities`Slice["LatticeParameters", "c"]], "Mouse"],
                 Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   RowBox[{"10.534940555671229`", "\"\[CapitalARing]\""}], 
                   FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1714293336][
                  GeneralUtilities`Slice["LatticeParameters", "c"]], "Mouse"],
                 ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"\[Alpha]\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"\[Alpha]\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1714293336][{"LatticeParameters", "\[Alpha]"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1714293336][
                  GeneralUtilities`Slice["LatticeParameters", "\[Alpha]"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TemplateBox[{"90", 
                    RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], "degrees",
                     "\"AngularDegrees\""}, "QuantityPostfix", SyntaxForm -> 
                    Mod], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1714293336][
                  GeneralUtilities`Slice["LatticeParameters", "\[Alpha]"]], 
                 "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"\[Beta]\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"\[Beta]\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1714293336][{"LatticeParameters", "\[Beta]"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1714293336][
                  GeneralUtilities`Slice["LatticeParameters", "\[Beta]"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TemplateBox[{"145.81319317157215`", 
                    RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], "degrees",
                     "\"AngularDegrees\""}, "QuantityPostfix", SyntaxForm -> 
                    Mod], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1714293336][
                  GeneralUtilities`Slice["LatticeParameters", "\[Beta]"]], 
                 "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}, {SpanFromAbove, 
               Item[
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"\[Gamma]\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"\[Gamma]\"", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1714293336][{"LatticeParameters", "\[Gamma]"}]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1714293336][
                  GeneralUtilities`Slice["LatticeParameters", "\[Gamma]"]], 
                 "Mouse"], Background -> GrayLevel[0.95], 
                Alignment -> {Left, Baseline}], 
               Pane[
                Annotation[
                 RawBoxes[
                  StyleBox[
                   TemplateBox[{"90", 
                    RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], "degrees",
                     "\"AngularDegrees\""}, "QuantityPostfix", SyntaxForm -> 
                    Mod], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1714293336][
                  GeneralUtilities`Slice["LatticeParameters", "\[Gamma]"]], 
                 "Mouse"], ImageSize -> {{75, Full}, Automatic}, 
                Alignment -> {Left, Baseline}]}}, BaseStyle -> {ContextMenu -> {
                 MenuItem["Copy position to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Copy data to clipboard", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                  MenuEvaluator -> Automatic], Delimiter, 
                 MenuItem["Paste position in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                   TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic], 
                 MenuItem["Paste data in new cell", 
                  KernelExecute[
                   TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                  MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
               FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
             Dividers -> All, FrameStyle -> GrayLevel[0.85], 
             BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
            LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False,
             ShowAutoStyles -> False]], 
         TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
         TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
        Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
         TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
            Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
            
            Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
              TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
              TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
             TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
              If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                 TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1714293336][
                TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
               Not[
                FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
               TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
               TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
          TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
            FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
            TypeSystem`SparseGrid[
             TypeSystem`H["(data no longer present)"]], 
            If[GeneralUtilities`$DebugMode, 
             Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
               TypeSystem`NestedGrid`PackagePrivate`formatState[
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
        DynamicModuleValues :> {}], 
      TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
      TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
        TypeSystem`NestedGrid`PackagePrivate`alignBar[
        TypeSystem`NestedGrid`PackagePrivate`$state$$][
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`Pathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1714293336]]]], 
        TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
      TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
        Dynamic[
         Replace[
          MouseAnnotation[Null], {
          TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1714293336][Null] -> 
           "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[1714293336][
             Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
              Blank[]]] :> (
            TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
             TypeSystem`NestedGrid`PackagePrivate`path; 
            TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
             TypeSystem`NestedGrid`PackagePrivate`path, 
              TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
           Spacer[10], Blank[] :> Spacer[10]}], TrackedSymbols :> {}], 
        FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
        Top, ImageSize -> {Automatic, 14}]}, 
     DynamicBox[
      ToBoxes[
       Column[
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
         TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
          TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
          TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
           TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
          TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
           TypeSystem`NestedGrid`PackagePrivate`alignBar[
           TypeSystem`NestedGrid`PackagePrivate`$state$$][
           TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], Spacings -> 
        If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
          0, {{}, {0, 0.05, 0}}]], StandardForm], 
      ImageSizeCache -> {437., {93.3544921875, 98.6455078125}}, 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
     TypeSystem`NestedGrid`PackagePrivate`deleteState[
      TypeSystem`NestedGrid`PackagePrivate`$state$$], 
     DynamicModuleValues :> {}, Initialization :> 
     Block[{$ContextPath = $ContextPath}, 
       Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
  "CopyTag",
  DisplayFunction->(#& ),
  InterpretationFunction->("Dataset[<>]"& )]], "Output",
 CellLabel->"Out[3]=",
 CellID->1052989866]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Options",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->2061341341],

Cell[CellGroupData[{

Cell[TextData[{
 "\"ReturnP\"",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CellID->1757724783],

Cell[TextData[{
 "Make the function return the transformation matrix ",
 Cell[BoxData[
  FormBox["P", TraditionalForm]], "InlineMath"],
 " that is to be used:"
}], "ExampleText",
 CellID->1080897061],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitCellTransformation", "[", 
  RowBox[{"\"\<Ferrocene\>\"", ",", 
   RowBox[{"\"\<UniqueAxis\>\"", "\[Rule]", "\"\<c\>\""}], ",", 
   RowBox[{"\"\<ReturnP\>\"", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->117858225],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[1]=",
 CellID->556641501]
}, Open  ]],

Cell["\<\
The procedure stops when returning this matrix; the transformation is not \
carried out.\
\>", "ExampleText",
 CellID->2116444218]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Possible Issues",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->1305812373],

Cell["Not all space groups have alternative settings.", "ExampleText",
 CellID->690732889],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UnitCellTransformation", "[", 
  RowBox[{"\"\<Glycyl-L-alanine\>\"", ",", 
   RowBox[{"\"\<AxisPermutation\>\"", "\[Rule]", "\"\<-cba\>\""}]}], 
  "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->69545001],

Cell[BoxData[
 TemplateBox[{
  "UnitCellTransformation", "one", 
   "\"This space group, \
\[LeftGuillemet]\\!\\(\\*RowBox[{\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\\\\\\\\*\
SubscriptBox[\\\\\\\\(P2\\\\\\\\), \\\\\\\\(1\\\\\\\\)]\\\\\\\\)\\\\\\\\!\\\\\
\\\\(\\\\\\\\*SubscriptBox[\\\\\\\\(2\\\\\\\\), \\\\\\\\(1\\\\\\\\)]\\\\\\\\)\
\\\\\\\\!\\\\\\\\(\\\\\\\\*SubscriptBox[\\\\\\\\(2\\\\\\\\), \\\\\\\\(1\\\\\\\
\\)]\\\\\\\\)\\\\\\\"\\\"}]\\)\[RightGuillemet] (no. \
\\!\\(\\*RowBox[{\\\"19\\\"}]\\)), has no alternative representations.\"", 2, 
   1, 1, 26405248560859951525, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellLabel->"During evaluation of In[1]:=",
 CellID->1539172892],

Cell[BoxData["$Aborted"], "Output",
 CellLabel->"Out[1]=",
 CellID->290784082]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Interactive Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->1653164318],

Cell[TextData[{
 "Let us reload the ",
 StyleBox[".cif", "Program"],
 " file for ferrocene:"
}], "ExampleText",
 CellID->200455833],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"cif", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
     "$MaXrdPath", ",", "\"\<ExampleFiles\>\"", ",", "\"\<CIF\>\"", ",", 
      "\"\<Ferrocene.cif\>\""}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ImportCrystalData", "[", "cif", "]"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->1806826735],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"ChemicalFormula\"\>", 
    "\[Rule]", "\<\"\\!\\(\\*SubscriptBox[\\(C\\), \
\\(10\\)]\\)\\!\\(\\*SubscriptBox[\\(H\\), \\(10\\)]\\)Fe\"\>"}], ",", 
   RowBox[{"\<\"FormulaUnits\"\>", "\[Rule]", "2"}], ",", 
   RowBox[{"\<\"SpaceGroup\"\>", 
    "\[Rule]", "\<\"\\!\\(\\*SubscriptBox[\\(P2\\), \\(1\\)]\\)/n\"\>"}], ",", 
   RowBox[{"\<\"LatticeParameters\"\>", "\[Rule]", 
    RowBox[{"\[LeftAssociation]", 
     RowBox[{
      RowBox[{"\<\"a\"\>", "\[Rule]", 
       TemplateBox[{
        "5.9285`", "\"\[CapitalARing]\"", "\[ARing]ngstr\[ODoubleDot]ms", 
         "\"Angstroms\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"b\"\>", "\[Rule]", 
       TemplateBox[{
        "7.612`", "\"\[CapitalARing]\"", "\[ARing]ngstr\[ODoubleDot]ms", 
         "\"Angstroms\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"c\"\>", "\[Rule]", 
       TemplateBox[{
        "9.041`", "\"\[CapitalARing]\"", "\[ARing]ngstr\[ODoubleDot]ms", 
         "\"Angstroms\""},
        "Quantity"]}], ",", 
      RowBox[{"\<\"\[Alpha]\"\>", "\[Rule]", 
       TemplateBox[{"90", 
         RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], "degrees", 
         "\"AngularDegrees\""},
        "QuantityPostfix"]}], ",", 
      RowBox[{"\<\"\[Beta]\"\>", "\[Rule]", 
       TemplateBox[{"93.156`", 
         RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], "degrees", 
         "\"AngularDegrees\""},
        "QuantityPostfix"]}], ",", 
      RowBox[{"\<\"\[Gamma]\"\>", "\[Rule]", 
       TemplateBox[{"90", 
         RowBox[{"\[InvisibleSpace]", "\"\[Degree]\""}], "degrees", 
         "\"AngularDegrees\""},
        "QuantityPostfix"]}]}], "\[RightAssociation]"}]}], ",", 
   RowBox[{"\<\"Wavelength\"\>", "\[Rule]", 
    TemplateBox[{
     "0.69804`", "\"\[CapitalARing]\"", "\[ARing]ngstr\[ODoubleDot]ms", 
      "\"Angstroms\""},
     "Quantity"]}], ",", 
   RowBox[{"\<\"AtomData\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\[LeftSkeleton]", "11", "\[RightSkeleton]"}], "}"}]}]}], "}"}]],
  "Output",
 CellLabel->"Out[1]=",
 CellID->1157432833]
}, Open  ]],

Cell["\<\
This example will illustrate how the space group symbol/name is chosen. In \
the 14th space group, there are 3 unique axes to choose from and 3 cell \
choices.\
\>", "ExampleText",
 CellID->1568731754],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"UnitCellTransformation", "[", 
    RowBox[{"\"\<Ferrocene\>\"", ",", 
     RowBox[{"\"\<UniqueAxis\>\"", "\[Rule]", "a"}], ",", 
     RowBox[{"\"\<CellChoice\>\"", "\[Rule]", "c"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Row", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"a", ",", "\"\<b\>\"", ",", "\"\<Unique axis\>\""}], "}"}],
           ",", 
          RowBox[{"{", 
           RowBox[{"\"\<a\>\"", ",", "\"\<b\>\"", ",", "\"\<c\>\""}], "}"}]}],
          "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"c", ",", "2", ",", "\"\<Cell choice\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}], "]"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"Spacer", "[", "10", "]"}]}], "]"}]}], "]"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->1215878290]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " code",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->1098223308],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"UnitCellTransformation", "::", "command"}], "=", 
   "\"\<Transformation command \[LeftGuillemet]`1`\[RightGuillemet] not \
recognised.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"UnitCellTransformation", "::", "invalid"}], "=", 
   "\"\<The setting \[LeftGuillemet]`1`\[RightGuillemet] is invalid.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"UnitCellTransformation", "::", "invalidSG"}], "=", 
   "\"\<The setting \[LeftGuillemet]`1`\[RightGuillemet] is invalid for this \
particular space group.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"UnitCellTransformation", "::", "na"}], "=", 
   "\"\<Input not applicable for the `1` system.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"UnitCellTransformation", "::", "diffset"}], "=", 
   "\"\<Setting mismatch between source, `1`, and target, `2`.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"UnitCellTransformation", "::", "sg"}], "=", 
   "\"\<Could not interpret \[LeftGuillemet]`1`\[RightGuillemet] as a space \
group symbol.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"UnitCellTransformation", "::", "differentsg"}], "=", 
   "\"\<The source space group, \[LeftGuillemet]`1`\[RightGuillemet] \
(no.`2`), and the target space group, \[LeftGuillemet]`3`\[RightGuillemet] \
(no. `4`), are not the same.\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"UnitCellTransformation", "::", "support"}], "=", 
   "\"\<Transformation of the input is not supported.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"UnitCellTransformation", "::", "target"}], "=", 
   "\"\<Could not determine target space group.\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"UnitCellTransformation", "::", "one"}], "=", 
    "\"\<This space group, \[LeftGuillemet]`1`\[RightGuillemet] (no. `2`), \
has no alternative representations.\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "@", "UnitCellTransformation"}], "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\"\<ReturnP\>\"", "\[Rule]", "False"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<CustomP\>\"", "\[Rule]", "False"}]}], "\[IndentingNewLine]",
     "}"}]}], ";"}]}], "Input",
 InitializationCell->False,
 CellLabel->"In[1]:=",
 CellID->912793279],

Cell[BoxData[
 RowBox[{
  RowBox[{"UnitCellTransformation", "[", 
   RowBox[{"crystal_String", ",", "userinput___"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"--", "-"}], "*", " ", "1.", " ", "Input", " ", "check", " ", 
       "and", " ", "preparation", " ", "*", 
       RowBox[{"--", "-"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"1.", 
        RowBox[{"A", ".", " ", "Load"}], " ", "crystal", " ", "metric"}], ",",
        " ", 
       RowBox[{
       "space", " ", "group", " ", "and", " ", "crystal", " ", "system"}]}], 
      " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
     "G", ",", "G0", ",", "sg", ",", "sg0", ",", "sourceSG", ",", "fullHM", 
      ",", "posSG", ",", "SG", ",", "fullHMs", ",", "sourceSGnumber", ",", 
      "system", ",", "mainSourceQ", ",", "\[IndentingNewLine]", "P", ",", 
      "P1", ",", "P2", ",", "p", ",", "\[IndentingNewLine]", "centList", ",", 
      "axpList", ",", "tetList", ",", "hex3List", ",", "hexList", ",", 
      "monoList", ",", "\[IndentingNewLine]", "sourceSetting", ",", 
      "targetSetting", ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"1.", 
        RowBox[{"B", ".", " ", "Process"}], " ", "input", " ", "syntax", " ", 
        "and", " ", "options"}], " ", "*)"}], "\[IndentingNewLine]", 
      "inputRules", ",", "inputString", ",", "returnP", ",", "customP", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"1.", "C", " ", "Process", " ", "source", " ", "setting"}], 
       " ", "*)"}], "\[IndentingNewLine]", "sourceCentring", ",", 
      "sourceCell", ",", "notes", ",", "relevantNotes", ",", "sourceO", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"1.", 
        RowBox[{"D", ".", " ", "Interpret"}], " ", "space", " ", "group", " ",
         "from", " ", "input"}], " ", "*)"}], "\[IndentingNewLine]", 
      "targetSG", ",", "needtargetSG", ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"1.", "E", " ", "Process", " ", "target", " ", "setting"}], 
       " ", "*)"}], "\[IndentingNewLine]", "allowed", ",", "cmds", ",", "na", 
      ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"1.", 
        RowBox[{"F", ".", " ", "Validating"}], " ", "input", " ", "values"}], 
       " ", "*)"}], "\[IndentingNewLine]", "targetCentring", ",", 
      "targetAxis", ",", "targetCC", ",", "targetAP", ",", "targetCell", ",", 
      "targetRS", ",", "\[IndentingNewLine]", "targetO", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"1.", 
        RowBox[{"G", ".", " ", "Check"}], " ", "setting", " ", "constraints", 
        " ", "on", " ", "certain", " ", "space", " ", "groups"}], " ", "*)"}],
       "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"1.", 
        RowBox[{"H", ".", " ", "Determining"}], " ", "new", " ", "space", " ",
         "group", " ", "symbol"}], " ", "*)"}], "\[IndentingNewLine]", 
      "targetSGnumber", ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"1.", 
        RowBox[{"I", ".", " ", "Common"}], " ", "transformation", " ", 
        "procedures"}], " ", "*)"}], "\[IndentingNewLine]", 
      "procedureCellCentring", ",", "procedureCellOrigin", ",", "shift", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"--", "-"}], "*", " ", "2.", " ", "Determining", " ", 
        "correct", " ", "transformation", " ", "matrices", " ", "*", 
        RowBox[{"--", "-"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"2.", 
        RowBox[{"A", ".", " ", "Triclinic"}]}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"2.", 
        RowBox[{"B", ".", " ", "Monoclinic"}]}], " ", "*)"}], 
      "\[IndentingNewLine]", "cmd", ",", "Q", ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"2.", 
        RowBox[{"C", ".", " ", "Orthorhombic"}]}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"2.", 
        RowBox[{"D", ".", " ", "Tetragonal"}]}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"2.", 
        RowBox[{"E", ".", " ", "Hexagonal"}], " ", "crystal", " ", "family"}],
        " ", "*)"}], "\[IndentingNewLine]", "sourceRS", ",", "M", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"2.", 
        RowBox[{"F", ".", " ", "Cubic"}]}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"--", "-"}], "*", " ", "3.", " ", "Carrying", " ", "out", " ",
         "transformations", " ", "*", 
        RowBox[{"--", "-"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"3.", 
        RowBox[{"A", ".", " ", "Preparations"}]}], " ", "*)"}], 
      "\[IndentingNewLine]", "q", ",", "newlattice", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"3.", 
        RowBox[{"B", ".", " ", "Transforming"}], " ", "coordinates", " ", 
        "and", " ", "ADPs"}], " ", "*)"}], "\[IndentingNewLine]", "xyz", ",", 
      "newxyz", ",", "adps", ",", "U", ",", "n0", ",", "n", ",", "newU", ",", 
      "u", ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"--", "-"}], "*", " ", "4.", " ", "Overwriting", " ", "entry",
         " ", "in", " ", "$CrystalData", " ", "*", 
        RowBox[{"--", "-"}]}], "*)"}], "\[IndentingNewLine]", "targetFullHM", 
      ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"--", "-"}], "*", " ", "5.", " ", "Display", " ", "*", 
        RowBox[{"--", "-"}]}], "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Dummy", " ", "variables"}], " ", "*)"}], 
      "\[IndentingNewLine]", "temp", ",", "x", ",", "y", ",", "i"}], "}"}], 
    ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"--", "-"}], "*", " ", "1.", " ", "Input", " ", "check", " ", 
      "and", " ", "preparation", " ", "*", 
      RowBox[{"--", "-"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"1.", 
       RowBox[{"A", ".", " ", "Load"}], " ", "crystal", " ", "metric"}], ",", 
      " ", 
      RowBox[{
      "space", " ", "group", " ", "and", " ", "crystal", " ", "system"}]}], 
     " ", "*)"}], "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"InputCheck", "[", 
      RowBox[{"\"\<GetCrystalSpaceGroup\>\"", ",", "crystal"}], "]"}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"G", "=", 
      RowBox[{"G0", "=", 
       RowBox[{"GetCrystalMetric", "@", "crystal"}]}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"sg", "=", 
      RowBox[{"sg0", "=", 
       RowBox[{"$CrystalData", "[", 
        RowBox[{"crystal", ",", "\"\<SpaceGroup\>\""}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"sg", "=", 
      RowBox[{"$GroupSymbolRedirect", "[", "sg", "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"sourceSG", "=", 
      RowBox[{"fullHM", "=", 
       RowBox[{"sg", "[", 
        RowBox[{"\"\<Name\>\"", ",", "\"\<HermannMauguinFull\>\""}], 
        "]"}]}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"posSG", "=", 
      RowBox[{"Position", "[", 
       RowBox[{"$SpaceGroups", ",", "fullHM"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"SG", "=", 
      RowBox[{"$SpaceGroups", "[", 
       RowBox[{"posSG", "\[LeftDoubleBracket]", 
        RowBox[{"1", ",", "1", ",", "1"}], "\[RightDoubleBracket]"}], "]"}]}],
      ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"fullHMs", "=", 
      RowBox[{"SG", "[", 
       RowBox[{"\"\<Name\>\"", ",", "\"\<HermannMauguinFull\>\""}], "]"}]}], 
     ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"sourceSGnumber", "=", 
      RowBox[{"SG", "[", "\"\<SpaceGroupNumber\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"system", "=", 
      RowBox[{"SG", "[", "\"\<CrystalSystem\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"mainSourceQ", "=", 
      RowBox[{
       RowBox[{"Length", "@", 
        RowBox[{"First", "@", "posSG"}]}], "\[LessEqual]", "3"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Default", " ", "transformation", " ", "matrices", " ", "and", " ", 
       "origin", " ", "shift"}], " ", "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{"P", "=", 
      RowBox[{"P1", "=", 
       RowBox[{"P2", "=", 
        RowBox[{"IdentityMatrix", "[", "3", "]"}]}]}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"p", "=", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ";", "\[IndentingNewLine]",
      "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{"Frequently", " ", "used", " ", "lists"}], " ", "*)"}], 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"centList", "=", 
      RowBox[{"{", "\[IndentingNewLine]", "\t", 
       RowBox[{
       "\"\<P\>\"", ",", "\"\<A\>\"", ",", "\"\<B\>\"", ",", "\"\<C\>\"", 
        ",", "\"\<F\>\"", ",", "\"\<I\>\""}], "}"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"axpList", "=", 
      RowBox[{"{", "\[IndentingNewLine]", "\t", 
       RowBox[{
       "\"\<abc\>\"", ",", "\"\<ba-c\>\"", ",", "\"\<cab\>\"", ",", 
        "\"\<-cba\>\"", ",", "\"\<bca\>\"", ",", "\"\<a-cb\>\""}], "}"}]}], 
     ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"tetList", "=", 
      RowBox[{"{", "\[IndentingNewLine]", "\t", 
       RowBox[{
       "\"\<P\>\"", ",", "\"\<I\>\"", ",", "\"\<C1\>\"", ",", "\"\<F1\>\"", 
        ",", "\"\<C2\>\"", ",", "\"\<F2\>\""}], "}"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"hex3List", "=", 
      RowBox[{"{", "\[IndentingNewLine]", "\t", 
       RowBox[{"\"\<R1\>\"", ",", "\"\<R2\>\"", ",", "\"\<R3\>\""}], "}"}]}], 
     ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"hexList", "=", 
      RowBox[{"{", "\[IndentingNewLine]", "\t", 
       RowBox[{
       "\"\<C1\>\"", ",", "\"\<C2\>\"", ",", "\"\<C3\>\"", ",", "\"\<H1\>\"", 
        ",", "\"\<H2\>\"", ",", "\"\<H3\>\"", ",", "\"\<D1\>\"", ",", 
        "\"\<D2\>\""}], "}"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"monoList", "=", 
      RowBox[{"{", "\[IndentingNewLine]", "\t", 
       RowBox[{
       "\"\<Cb1\>\"", ",", "\"\<Cb2\>\"", ",", "\"\<Cb3\>\"", ",", 
        "\"\<Ac1\>\"", ",", "\"\<Ac2\>\"", ",", "\"\<Ac3\>\""}], "}"}]}], ";",
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", "Miscellaneous", " ", "*)"}], "\[IndentingNewLine]", 
     "\t", 
     RowBox[{"sourceSetting", "=", 
      RowBox[{"targetSetting", "=", 
       RowBox[{"<|", "|>"}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"1.", 
       RowBox[{"B", ".", " ", "Process"}], " ", "input", " ", "syntax", " ", 
       "and", " ", "options"}], " ", "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{"inputRules", "=", 
      RowBox[{"Association", "@", 
       RowBox[{"Cases", "[", 
        RowBox[{
         RowBox[{"{", "userinput", "}"}], ",", "_Rule"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"inputString", "=", 
      RowBox[{"Cases", "[", 
       RowBox[{
        RowBox[{"{", "userinput", "}"}], ",", "_String"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t\t", 
     RowBox[{"(*", " ", "Check", " ", "*)"}], "\[IndentingNewLine]", "\t\t", 
     RowBox[{
      RowBox[{
       RowBox[{"Which", "[", "\[IndentingNewLine]", "\t\t", 
        RowBox[{
         RowBox[{"#", "===", "0"}], ",", "Null", ",", "\[IndentingNewLine]", 
         "\t\t", 
         RowBox[{"#", "===", "1"}], ",", 
         RowBox[{"inputString", "=", 
          RowBox[{"First", "@", "inputString"}]}], ",", "\[IndentingNewLine]",
          "\t\t", "True", ",", "\[IndentingNewLine]", "\t\t\t", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{
            RowBox[{"UnitCellTransformation", "::", "invalid"}], ",", 
            "inputString"}], "]"}], ";", "\[IndentingNewLine]", "\t\t\t", 
          RowBox[{"Abort", "[", "]"}]}]}], "\[IndentingNewLine]", "\t\t", 
        "]"}], "&"}], "@", 
      RowBox[{"Length", "@", "inputString"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{"Save", " ", "option", " ", "settings"}], " ", "*)"}], 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"returnP", "=", 
      RowBox[{"inputRules", "[", "\"\<ReturnP\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"customP", "=", 
      RowBox[{"Lookup", "[", 
       RowBox[{"inputRules", ",", "\"\<CustomP\>\"", ",", 
        RowBox[{"{", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Remove", " ", "options", " ", "from", " ", "other", " ", "settings"}], 
      " ", "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{"KeyDropFrom", "[", 
      RowBox[{"inputRules", ",", "\[IndentingNewLine]", "\t", 
       RowBox[{"{", 
        RowBox[{
        "\"\<ReturnP\>\"", ",", "\"\<CustomP\>\"", ",", 
         "\"\<CustomSymbol\>\""}], "}"}]}], "]"}], ";", "\[IndentingNewLine]",
      "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"1.", "C", " ", "Process", " ", "source", " ", "setting"}], " ",
       "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"i", ".", " ", "Load"}], " ", "source", " ", "setting", " ", 
       "from", " ", "source", " ", "space", " ", "group"}], " ", "*)"}], 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"sourceSetting", "=", 
      RowBox[{
       RowBox[{"$GroupSymbolRedirect", "[", "sourceSG", "]"}], "[", 
       "\"\<Setting\>\"", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"ii", ".", " ", "Check"}], " ", "if", " ", "space", " ", 
       "group", " ", "has", " ", "alternative", " ", "settings"}], " ", 
      "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"sourceSetting", "===", 
         RowBox[{"<|", "|>"}]}], "&&", "\[IndentingNewLine]", "\t", 
        RowBox[{"(*", " ", 
         RowBox[{"Exception", ":", " ", 
          RowBox[{"Special", " ", "multiple", " ", "cells"}]}], " ", "*)"}], 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"!", 
         RowBox[{"MemberQ", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<Tetragonal\>\"", ",", "\"\<Hexagonal\>\""}], "}"}], 
           ",", "system"}], "]"}]}]}], ",", "\[IndentingNewLine]", "\t\t", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"UnitCellTransformation", "::", "one"}], ",", 
          "\[IndentingNewLine]", "\t\t", 
          RowBox[{"GetSymmetryData", "[", 
           RowBox[{"sourceSG", ",", "\"\<Symbol\>\""}], "]"}], ",", 
          "\[IndentingNewLine]", "\t\t", "sourceSGnumber"}], "]"}], ";", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"iii", ".", " ", "Check"}], " ", "cell", " ", "origin", " ", 
       "from", " ", "symbol"}], " ", "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{"temp", "=", 
      RowBox[{"StringTake", "[", 
       RowBox[{"sg0", ",", 
        RowBox[{"-", "2"}]}], "]"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"Which", "[", "\[IndentingNewLine]", "\t", 
      RowBox[{
       RowBox[{"temp", "===", "\"\<:2\>\""}], ",", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"sourceSetting", ",", 
         RowBox[{"\"\<CellOrigin\>\"", "\[Rule]", "2"}]}], "]"}]}], 
      "\[IndentingNewLine]", "\t", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"iv", ".", " ", 
        RowBox[{"Checking", " ", "'"}]}], 
       RowBox[{"Notes", "'"}], " ", "for", " ", "info", " ", "on", " ", 
       "input", " ", "setting"}], " ", "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{"notes", "=", 
      RowBox[{"Lookup", "[", 
       RowBox[{
        RowBox[{"$CrystalData", "@", "crystal"}], ",", "\"\<Notes\>\"", ",", 
        RowBox[{"<|", "|>"}]}], "]"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"relevantNotes", "=", 
      RowBox[{"notes", "\[LeftDoubleBracket]", 
       RowBox[{"{", "\[IndentingNewLine]", "\t", 
        RowBox[{
        "\"\<RhombohedralSetting\>\"", ",", "\"\<MultipleCell\>\"", ",", 
         "\"\<CellCentring\>\"", ",", "\"\<CellOrigin\>\""}], "}"}], 
       "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "sourceRS", ",", "sourceCell", ",", "sourceCentring", ",", "sourceO"}],
        "}"}], "=", 
      RowBox[{"Values", "@", "relevantNotes"}]}], ";", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"sourceSetting", ",", 
       RowBox[{"DeleteMissing", "@", "relevantNotes"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"1.", 
       RowBox[{"D", ".", " ", "Interpret"}], " ", "space", " ", "group", " ", 
       "from", " ", "input"}], " ", "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"i", ".", " ", "No"}], " ", "input", " ", 
       RowBox[{"commands", " ", "--"}], " ", "prompt", " ", 
       RowBox[{"dialogue", "/", "UI"}], " ", 
       RowBox[{"(", "TODO", ")"}]}], " ", "*)"}], "\[IndentingNewLine]", "\t",
      "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"ii", ".", " ", "Custom"}], " ", "transformation", " ", 
       "matrix"}], " ", "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"customP", "=!=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{
        RowBox[{"P1", "=", "customP"}], ";", "\[IndentingNewLine]", "\t", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"MatrixQ", "@", "P1"}]}], ",", 
          RowBox[{"(*", " ", "Check", " ", "*)"}], "\[IndentingNewLine]", 
          "\t", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{
             RowBox[{"UnitCellTransformation", "::", "invalid"}], ",", "P1"}],
             "]"}], ";", 
           RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]",
         "\t", 
        RowBox[{"targetSG", "=", "sourceSG"}], 
        RowBox[{"(*", " ", 
         RowBox[{"Use", " ", "same", " ", "space", " ", "group"}], " ", 
         "*)"}], ";", "\[IndentingNewLine]", "\t", 
        RowBox[{"Goto", "[", "\"\<MetricTransformation\>\"", "]"}]}]}], "]"}],
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"iii", ".", " ", "Interpret"}], " ", "string", " ", "as", " ", 
       "target", " ", "space", " ", "group"}], " ", "*)"}], 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"inputString", "=!=", 
        RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\t\t", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Check", " ", "if", " ", "valid", " ", "space", " ", "group", " ", 
         "symbol"}], " ", "*)"}], "\[IndentingNewLine]", "\t\t", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MissingQ", "@", 
           RowBox[{"$GroupSymbolRedirect", "[", "inputString", "]"}]}], ",", 
          "\[IndentingNewLine]", "\t\t", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{
             RowBox[{"UnitCellTransformation", "::", "sg"}], ",", 
             "inputString"}], "]"}], ";", "\[IndentingNewLine]", "\t\t", 
           RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]",
         "\[IndentingNewLine]", "\t\t", 
        RowBox[{"targetSG", "=", "inputString"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"iv", ".", " ", "Parse"}], " ", "input", " ", "as", " ", 
       "setting", " ", "commands"}], " ", "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"inputRules", "=!=", 
        RowBox[{"<|", "|>"}]}], ",", "\[IndentingNewLine]", "\t", 
       RowBox[{"needtargetSG", "=", "True"}], ",", "\[IndentingNewLine]", 
       "\t\t", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Check", " ", "whether", " ", "Hall", " ", "symbol", " ", "has", " ", 
         "been", " ", "used"}], " ", "*)"}], "\[IndentingNewLine]", "\t\t", 
       RowBox[{
        RowBox[{"temp", "=", 
         RowBox[{"Position", "[", 
          RowBox[{"$SpaceGroups", ",", "targetSG"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"temp", "\[NotEqual]", 
           RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", "\t\t", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"temp", "\[LeftDoubleBracket]", 
              RowBox[{"1", ",", 
               RowBox[{"-", "1"}], ",", "1"}], "\[RightDoubleBracket]"}], 
             "===", "\"\<HallString\>\""}], ",", "\[IndentingNewLine]", 
            "\t\t", 
            RowBox[{"targetSG", "=", 
             RowBox[{
              RowBox[{"First", "[", 
               RowBox[{"$SpaceGroups", "@@@", "\[IndentingNewLine]", "\t\t", 
                RowBox[{"Most", "@", 
                 RowBox[{"First", "@", "temp"}]}]}], "]"}], "[", 
              RowBox[{"\"\<Name\>\"", ",", "\"\<Symbol\>\""}], "]"}]}]}], 
           "]"}]}], "]"}]}]}], "\[IndentingNewLine]", "\t", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"1.", "E", " ", "Process", " ", "target", " ", "setting"}], " ",
       "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"inputRules", "=!=", 
        RowBox[{"<|", "|>"}]}], ",", "\[IndentingNewLine]", "\t", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"a", ".", " ", "Setting"}], " ", "commands", " ", "given", 
         " ", "in", " ", "association"}], " ", "*)"}], "\[IndentingNewLine]", 
       "\t\t", 
       RowBox[{
        RowBox[{"targetSetting", "=", "inputRules"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "\t\t\t", 
        RowBox[{"(*", " ", 
         RowBox[{"Checking", " ", "commands"}], " ", "*)"}], 
        "\[IndentingNewLine]", "\t\t\t", 
        RowBox[{"allowed", "=", 
         RowBox[{"{", "\[IndentingNewLine]", "\t\t\t", 
          RowBox[{
          "\"\<UniqueAxis\>\"", ",", "\"\<CellChoice\>\"", ",", 
           "\"\<AxisPermutation\>\"", ",", "\[IndentingNewLine]", "\t\t\t", 
           "\"\<CellCentring\>\"", ",", "\"\<MultipleCell\>\"", ",", 
           "\[IndentingNewLine]", "\t\t\t", "\"\<RhombohedralSetting\>\"", 
           ",", "\"\<CellOrigin\>\""}], "}"}]}], ";", "\[IndentingNewLine]", 
        "\t\t\t", 
        RowBox[{"cmds", "=", 
         RowBox[{"Keys", "@", "targetSetting"}]}], ";", "\[IndentingNewLine]",
         "\t\t\t", 
        RowBox[{"na", "=", 
         RowBox[{"Complement", "[", 
          RowBox[{"cmds", ",", "allowed"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\t\t\t\t", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"na", "\[NotEqual]", 
           RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", "\t\t\t\t", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{
             RowBox[{"UnitCellTransformation", "::", "command"}], ",", 
             RowBox[{"First", "@", "na"}]}], "]"}], ";", 
           "\[IndentingNewLine]", "\t\t\t\t", 
           RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]",
         "\[IndentingNewLine]", "\t\t\t", 
        RowBox[{"(*", " ", 
         RowBox[{"Checking", " ", "usefullness", " ", "of", " ", "commands"}],
          " ", "*)"}], "\[IndentingNewLine]", "\t\t\t", 
        RowBox[{"temp", "=", 
         RowBox[{"Which", "[", "\[IndentingNewLine]", "\t\t\t", 
          RowBox[{
           RowBox[{"system", "===", "\"\<Triclinic\>\""}], ",", 
           "\[IndentingNewLine]", "\t\t\t\t", 
           RowBox[{"{", "\"\<CellCentring\>\"", "}"}], ",", 
           "\[IndentingNewLine]", "\t\t\t", 
           RowBox[{"system", "===", "\"\<Monoclinic\>\""}], ",", 
           "\[IndentingNewLine]", "\t\t\t\t", 
           RowBox[{"{", 
            RowBox[{"\"\<UniqueAxis\>\"", ",", "\"\<CellChoice\>\""}], "}"}], 
           ",", "\[IndentingNewLine]", "\t\t\t", 
           RowBox[{"system", "===", "\"\<Orthorhombic\>\""}], ",", 
           "\[IndentingNewLine]", "\t\t\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<AxisPermutation\>\"", ",", "\"\<CellCentring\>\"", ",", 
             "\"\<CellOrigin\>\""}], "}"}], ",", "\[IndentingNewLine]", 
           "\t\t\t", 
           RowBox[{"system", "===", "\"\<Tetragonal\>\""}], ",", 
           "\[IndentingNewLine]", "\t\t\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<CellCentring\>\"", ",", "\"\<MultipleCell\>\"", ",", 
             "\"\<CellOrigin\>\""}], "}"}], ",", "\[IndentingNewLine]", 
           "\t\t\t", 
           RowBox[{"system", "===", "\"\<Trigonal\>\""}], ",", 
           "\[IndentingNewLine]", "\t\t\t\t", 
           RowBox[{"{", 
            RowBox[{
            "\"\<MultipleCell\>\"", ",", "\"\<RhombohedralSetting\>\""}], 
            "}"}], ",", "\[IndentingNewLine]", "\t\t\t", 
           RowBox[{"system", "===", "\"\<Hexagonal\>\""}], ",", 
           "\[IndentingNewLine]", "\t\t\t\t", 
           RowBox[{"{", "\"\<MultipleCell\>\"", "}"}], ",", 
           "\[IndentingNewLine]", "\t\t\t", 
           RowBox[{"system", "===", "\"\<Cubic\>\""}], ",", 
           "\[IndentingNewLine]", "\t\t\t\t", 
           RowBox[{"{", 
            RowBox[{"\"\<CellCentring\>\"", ",", "\"\<CellOrigin\>\""}], 
            "}"}]}], "\[IndentingNewLine]", "\t\t\t", "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "\t\t\t", 
        RowBox[{"targetSetting", "=", 
         RowBox[{"DeleteMissing", "@", 
          RowBox[{
          "targetSetting", "\[LeftDoubleBracket]", "temp", 
           "\[RightDoubleBracket]"}]}]}], ";", "\[IndentingNewLine]", 
        "\t\t\t", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"targetSetting", "===", 
           RowBox[{"<|", "|>"}]}], ",", "\[IndentingNewLine]", "\t\t\t", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{
             RowBox[{"UnitCellTransformation", "::", "na"}], ",", 
             "\[IndentingNewLine]", "\t\t\t", 
             RowBox[{"ToLowerCase", "@", "system"}]}], "]"}], ";", 
           "\[IndentingNewLine]", "\t\t\t", 
           RowBox[{"Abort", "[", "]"}]}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"b", ".", " ", "Setting"}], " ", "extracted", " ", "from", 
         " ", "target", " ", "space", " ", "group"}], " ", "*)"}], 
       "\[IndentingNewLine]", "\t\t", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"ValueQ", "@", "targetSG"}]}], ",", 
          RowBox[{"targetSG", "=", "sourceSG"}]}], "]"}], ";", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"targetSetting", "=", 
         RowBox[{
          RowBox[{"$GroupSymbolRedirect", "[", "targetSG", "]"}], "[", 
          "\"\<Setting\>\"", "]"}]}]}]}], "\[IndentingNewLine]", "\t", "]"}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Supply", " ", "with", " ", "current", " ", "settings", " ", "if", " ", 
       "unspecified", " ", "in", " ", "input"}], " ", "*)"}], 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"targetSetting", "=", 
      RowBox[{"Append", "[", 
       RowBox[{"sourceSetting", ",", "targetSetting"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\t\t", 
     RowBox[{"(*", " ", 
      RowBox[{"Exception", ":", " ", 
       RowBox[{
        RowBox[{"No", " ", "'"}], 
        RowBox[{"RhombohedralSetting", "'"}], " ", 
        RowBox[{"for", " ", "'"}], 
        RowBox[{"R", "'"}], " ", "cell"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"targetSetting", "[", "\"\<MultipleCell\>\"", "]"}], "===", 
        "\"\<R\>\""}], ",", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"KeyDropFrom", "[", 
        RowBox[{"targetSetting", ",", "\"\<RhombohedralSetting\>\""}], 
        "]"}]}], "]"}], ";", " ", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"1.", 
       RowBox[{"F", ".", " ", "Validating"}], " ", "input", " ", "values"}], 
      " ", "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"i", ".", " ", "'"}], 
       RowBox[{"CellCentring", "'"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     "\t", 
     RowBox[{"targetCentring", "=", 
      RowBox[{"targetSetting", "[", "\"\<CellCentring\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"MissingQ", "@", "targetCentring"}]}], ",", 
       "\[IndentingNewLine]", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"MemberQ", "[", 
           RowBox[{
           "centList", ",", "\[IndentingNewLine]", "\t", "targetCentring"}], 
           "]"}]}], ",", "\[IndentingNewLine]", "\t", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{
            RowBox[{"UnitCellTransformation", "::", "invalid"}], ",", 
            "\[IndentingNewLine]", "\t", "targetCentring"}], "]"}], ";", 
          RowBox[{"Abort", "[", "]"}]}]}], "\[IndentingNewLine]", "\t", 
        "]"}]}], "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"ii", ".", " ", "'"}], 
       RowBox[{"UniqueAxis", "'"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     "\t", 
     RowBox[{"targetAxis", "=", 
      RowBox[{"targetSetting", "[", "\"\<UniqueAxis\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"MissingQ", "@", "targetAxis"}]}], ",", "\[IndentingNewLine]",
        "\t", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"MemberQ", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\"\<a\>\"", ",", "\"\<b\>\"", ",", "\"\<c\>\""}], 
              "}"}], ",", "targetAxis"}], "]"}]}], ",", "\[IndentingNewLine]",
           "\t", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{
             RowBox[{"UnitCellTransformation", "::", "invalid"}], ",", 
             "\[IndentingNewLine]", "\t", "targetAxis"}], "]"}], ";", 
           RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]",
         "\t", 
        RowBox[{"targetAxis", "=", 
         RowBox[{"ToLowerCase", "@", "targetAxis"}]}]}]}], 
      "\[IndentingNewLine]", "\t", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"iii", ".", " ", "'"}], 
       RowBox[{"CellChoice", "'"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     "\t", 
     RowBox[{"targetCC", "=", 
      RowBox[{"targetSetting", "[", "\"\<CellChoice\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"MissingQ", "@", "targetCC"}]}], ",", "\[IndentingNewLine]", 
       "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"MemberQ", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", "targetCC"}], 
           "]"}]}], ",", "\[IndentingNewLine]", "\t", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{
            RowBox[{"UnitCellTransformation", "::", "invalid"}], ",", 
            "\[IndentingNewLine]", "\t", "targetCC"}], "]"}], ";", 
          RowBox[{"Abort", "[", "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
      "\t", "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"iv", ".", " ", "'"}], 
       RowBox[{"AxisPermutation", "'"}]}], " ", "*)"}], "\[IndentingNewLine]",
      "\t", 
     RowBox[{"targetAP", "=", 
      RowBox[{"targetSetting", "[", "\"\<AxisPermutation\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"MissingQ", "@", "targetAP"}]}], ",", "\[IndentingNewLine]", 
       "\t", 
       RowBox[{"(*", " ", 
        RowBox[{"Check", " ", "if", " ", "string"}], " ", "*)"}], 
       "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"StringQ", "@", "targetAP"}]}], ",", "\[IndentingNewLine]",
           "\t", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{
             RowBox[{"UnitCellTransformation", "::", "invalid"}], ",", 
             "\[IndentingNewLine]", "\t", "targetAP"}], "]"}], ";", 
           RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]",
         "\t", 
        RowBox[{"(*", " ", 
         RowBox[{
         "Support", " ", "for", " ", "various", " ", "input", " ", "forms"}], 
         " ", "*)"}], "\[IndentingNewLine]", "\t", 
        RowBox[{"targetAP", "=", 
         RowBox[{"ToLowerCase", "@", 
          RowBox[{"StringReplace", "[", "\[IndentingNewLine]", "\t", 
           RowBox[{"targetAP", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
              "\"\<\!\(\*OverscriptBox[\(c\), \(_\)]\)\>\"", "\[Rule]", 
               "\"\<-c\>\""}], ",", 
              RowBox[{
              "\"\<\!\(\*OverscriptBox[\(C\), \(_\)]\)\>\"", "\[Rule]", 
               "\"\<-C\>\""}]}], "}"}]}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"(*", " ", 
         RowBox[{"Check", " ", "setting", " ", "value"}], " ", "*)"}], 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"MemberQ", "[", 
            RowBox[{"axpList", ",", "targetAP"}], "]"}]}], ",", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{
             RowBox[{"UnitCellTransformation", "::", "invalid"}], ",", 
             "\[IndentingNewLine]", "\t", 
             RowBox[{"targetSetting", "[", "\"\<AxisPermutation\>\"", "]"}]}],
             "]"}], ";", 
           RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]",
         "\t", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"Update", " ", "'"}], 
          RowBox[{"targetSetting", "'"}]}], " ", "*)"}], 
        "\[IndentingNewLine]", "\t", 
        RowBox[{
         RowBox[{"targetSetting", "[", "\"\<AxisPermutation\>\"", "]"}], "=", 
         "targetAP"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"v", ".", " ", "'"}], 
       RowBox[{"MultipleCell", "'"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     "\t", 
     RowBox[{"targetCell", "=", 
      RowBox[{"targetSetting", "[", "\"\<MultipleCell\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"MissingQ", "@", "targetCell"}]}], ",", "\[IndentingNewLine]",
        "\t", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"Depending", " ", "on", " ", "crystal", " ", "system"}], 
         "..."}], " ", "*)"}], "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{"temp", "=", 
         RowBox[{"Which", "[", "\[IndentingNewLine]", "\t", 
          RowBox[{
           RowBox[{"system", "===", "\"\<Tetragonal\>\""}], ",", "tetList", 
           ",", "\[IndentingNewLine]", "\t", 
           RowBox[{
            RowBox[{"system", "===", "\"\<Trigonal\>\""}], "||", 
            RowBox[{"system", "===", "\"\<Hexagonal\>\""}]}], ",", 
           "\[IndentingNewLine]", "\t\t", 
           RowBox[{"Flatten", "@", 
            RowBox[{"Join", "[", "\[IndentingNewLine]", "\t\t", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"\"\<P\>\"", ",", "\"\<R\>\""}], "}"}], ",", 
              "hex3List", ",", "hexList", ",", "monoList"}], "]"}]}], ",", 
           "\[IndentingNewLine]", "\t", "True", ",", "\[IndentingNewLine]", 
           "\t\t", 
           RowBox[{
            RowBox[{"Message", "[", 
             RowBox[{
              RowBox[{"UnitCellTransformation", "::", "na"}], ",", 
              "\[IndentingNewLine]", "\t\t", 
              RowBox[{"ToLowerCase", "@", "system"}]}], "]"}], ";", 
            RowBox[{"Abort", "[", "]"}]}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"(*", " ", 
         RowBox[{"Check", " ", "setting", " ", "value"}], " ", "*)"}], 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"MemberQ", "[", 
            RowBox[{"temp", ",", "targetCell"}], "]"}]}], ",", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{
             RowBox[{"UnitCellTransformation", "::", "invalidSG"}], ",", 
             "\[IndentingNewLine]", "\t", "targetCell"}], "]"}], ";", 
           RowBox[{"Abort", "[", "]"}]}]}], "]"}]}]}], "\[IndentingNewLine]", 
      "\t", "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"vi", ".", " ", "'"}], 
       RowBox[{"RhombohedralSetting", "'"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"targetRS", "=", 
      RowBox[{"inputRules", "[", "\"\<RhombohedralSetting\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"MissingQ", "@", "targetRS"}]}], ",", "\[IndentingNewLine]", 
       "\t", 
       RowBox[{
        RowBox[{"targetRS", "=", 
         RowBox[{"ToLowerCase", "@", "targetRS"}]}], ";", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"(*", " ", 
         RowBox[{"Check", " ", "setting", " ", "value"}], " ", "*)"}], 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"MemberQ", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\"\<obverse\>\"", ",", "\"\<reverse\>\""}], "}"}], ",",
              "targetRS"}], "]"}]}], ",", "\[IndentingNewLine]", "\t", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{
             RowBox[{"UnitCellTransformation", "::", "invalid"}], ",", 
             "\[IndentingNewLine]", "\t", 
             RowBox[{
             "targetSetting", "[", "\"\<RhombohedralSetting\>\"", "]"}]}], 
            "]"}], ";", 
           RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]",
         "\t", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"Update", " ", "'"}], 
          RowBox[{"targetSetting", "'"}]}], " ", "*)"}], 
        "\[IndentingNewLine]", "\t", 
        RowBox[{
         RowBox[{"targetSetting", "[", "\"\<RhombohedralSetting\>\"", "]"}], 
         "=", "targetRS"}]}]}], "\[IndentingNewLine]", "\t", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"vii", ".", " ", "'"}], 
       RowBox[{"CellOrigin", "'"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     "\t", 
     RowBox[{"targetO", "=", 
      RowBox[{"targetSetting", "[", "\"\<CellOrigin\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"MissingQ", "@", "targetO"}]}], ",", "\[IndentingNewLine]", 
       "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"MemberQ", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "2"}], "}"}], ",", "targetO"}], "]"}]}], ",", 
         "\[IndentingNewLine]", "\t", 
         RowBox[{
          RowBox[{"Message", "[", 
           RowBox[{
            RowBox[{"UnitCellTransformation", "::", "invalid"}], ",", 
            "\[IndentingNewLine]", "\t", "targetO"}], "]"}], ";", 
          RowBox[{"Abort", "[", "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
      "\t", "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"1.", 
       RowBox[{"G", ".", " ", "Check"}], " ", "setting", " ", "constraints", 
       " ", "on", " ", "certain", " ", "space", " ", "groups"}], " ", "*)"}], 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"i", ".", " ", "Target"}], " ", "setting", " ", "must", " ", 
       "be", " ", "a", " ", "subset", " ", "of", " ", "space", " ", "group", 
       " ", "settings"}], " ", "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"(", 
         RowBox[{"SubsetQ", "@@", 
          RowBox[{"Keys", "/@", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"SG", "[", "\"\<Setting\>\"", "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Which", "[", 
              RowBox[{"(*", " ", 
               RowBox[{"Exceptions", ":", " ", 
                RowBox[{
                "Cell", " ", "centring", " ", "and", " ", "special", " ", 
                 "multiple", " ", "cells"}]}], " ", "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"MemberQ", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"\"\<Tetragonal\>\"", ",", "\"\<Hexagonal\>\""}], 
                  "}"}], ",", "system"}], "]"}], ",", "\[IndentingNewLine]", 
               "\t", 
               RowBox[{"KeyDrop", "[", 
                RowBox[{"targetSetting", ",", "\"\<MultipleCell\>\""}], "]"}],
                ",", "\[IndentingNewLine]", 
               RowBox[{"MemberQ", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<Monoclinic\>\"", ",", "\"\<Orthorhombic\>\"", ",", 
                   "\"\<Tetragonal\>\"", ",", "\"\<Cubic\>\""}], "}"}], ",", 
                 "system"}], "]"}], ",", "\[IndentingNewLine]", "\t", 
               RowBox[{"KeyDrop", "[", 
                RowBox[{"targetSetting", ",", "\"\<CellCentring\>\""}], "]"}],
                ",", "\[IndentingNewLine]", "True", ",", 
               "\[IndentingNewLine]", "\t", "targetSetting"}], "]"}]}], 
            "}"}]}]}], "\[IndentingNewLine]", "\t", ")"}]}], ",", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"UnitCellTransformation", "::", "diffset"}], ",", 
          "\[IndentingNewLine]", "\t\t", 
          RowBox[{"Keys", "@", "sourceSetting"}], ",", 
          RowBox[{"Keys", "@", "targetSetting"}]}], "]"}], ";", 
        RowBox[{"Abort", "[", "]"}]}]}], "\[IndentingNewLine]", "\t", "]"}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"1.", 
       RowBox[{"H", ".", " ", "Determining"}], " ", "new", " ", "space", " ", 
       "group", " ", "symbol"}], " ", "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"i", ".", " ", "Determine"}], " ", "the", " ", "target", " ", 
       "space", " ", "group", " ", "from", " ", "setting", " ", "if", " ", 
       "needed"}], " ", "*)"}], "\[IndentingNewLine]", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{"needtargetSG", ",", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"(*", " ", 
        RowBox[{"Main", " ", 
         RowBox[{"entry", "?"}]}], " ", "*)"}], "\[IndentingNewLine]", "\t\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Sort", "@", 
           RowBox[{"SG", "[", "\"\<Setting\>\"", "]"}]}], "===", 
          RowBox[{"Sort", "@", "targetSetting"}]}], ",", 
         "\[IndentingNewLine]", "\t\t", 
         RowBox[{"targetSG", "=", 
          RowBox[{"SG", "[", 
           RowBox[{"\"\<Name\>\"", ",", "\"\<HermannMauguinFull\>\""}], 
           "]"}]}], ",", "\[IndentingNewLine]", "\t\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{"Special", " ", "multiple", " ", 
           RowBox[{"cell", "?"}]}], " ", "*)"}], "\[IndentingNewLine]", 
         "\t\t\t", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{
              RowBox[{"Flatten", "@", 
               RowBox[{"Join", "[", "\[IndentingNewLine]", "\t\t\t", 
                RowBox[{"{", 
                 RowBox[{"tetList", ",", 
                  RowBox[{"{", "\"\<R\>\"", "}"}], ",", "hex3List", ",", 
                  "hexList", ",", "monoList"}], "}"}], "]"}]}], ",", 
              "\[IndentingNewLine]", "\t\t\t", "targetCell"}], "]"}], ",", 
            "\[IndentingNewLine]", "\t\t\t", 
            RowBox[{
             RowBox[{"targetSG", "=", "sourceSG"}], ";", 
             "\[IndentingNewLine]", "\t\t\t", 
             RowBox[{"targetSGnumber", "=", "sourceSGnumber"}], ";", 
             "\[IndentingNewLine]", "\t\t\t", 
             RowBox[{"Goto", "[", "\"\<CheckSGformat\>\"", "]"}]}]}], 
           "\[IndentingNewLine]", "\t\t\t", "]"}], ";", "\[IndentingNewLine]",
           "\[IndentingNewLine]", "\t\t", 
          RowBox[{"(*", " ", 
           RowBox[{"Check", " ", "alternatives"}], " ", "*)"}], 
          "\[IndentingNewLine]", "\t\t", 
          RowBox[{"temp", "=", 
           RowBox[{
           "SG", "\[LeftDoubleBracket]", "\"\<AlternativeSettings\>\"", 
            "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", "\t\t", 
          RowBox[{"i", "=", "1"}], ";", "\[IndentingNewLine]", "\t\t", 
          RowBox[{"While", "[", 
           RowBox[{"True", ",", "\[IndentingNewLine]", "\t\t", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"i", ">", 
                RowBox[{"Length", "@", "temp"}]}], ",", "\[IndentingNewLine]",
                "\t\t", 
               RowBox[{
                RowBox[{"Message", "[", 
                 RowBox[{"UnitCellTransformation", "::", "target"}], "]"}], 
                ";", 
                RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", 
             "\[IndentingNewLine]", "\t\t", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Sort", "@", 
                 RowBox[{"temp", "\[LeftDoubleBracket]", 
                  RowBox[{"i", ",", "\"\<Setting\>\""}], 
                  "\[RightDoubleBracket]"}]}], "===", 
                RowBox[{"Sort", "@", "targetSetting"}]}], ",", 
               "\[IndentingNewLine]", "\t\t", 
               RowBox[{
                RowBox[{"targetSG", "=", 
                 RowBox[{"temp", "\[LeftDoubleBracket]", 
                  RowBox[{
                  "i", ",", "\"\<Name\>\"", ",", 
                   "\"\<HermannMauguinFull\>\""}], 
                  "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
                "\t\t", 
                RowBox[{"Break", "[", "]"}]}]}], "]"}], ";", 
             "\[IndentingNewLine]", "\t\t", 
             RowBox[{"i", "++"}]}]}], "]"}]}]}], "\[IndentingNewLine]", 
        "\t\t", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"ii", ".", " ", "Check"}], " ", "if", " ", "source", " ", 
       "and", " ", "target", " ", "are", " ", "same", " ", "space", " ", 
       "group"}], " ", "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{"targetSGnumber", "=", 
      RowBox[{"GetSymmetryData", "[", 
       RowBox[{"targetSG", ",", "\"\<SpaceGroupNumber\>\""}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"sourceSGnumber", "\[NotEqual]", "targetSGnumber"}], ",", 
       "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"UnitCellTransformation", "::", "differentsg"}], ",", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{"GetSymmetryData", "[", 
           RowBox[{"sourceSG", ",", "\"\<Symbol\>\""}], "]"}], ",", 
          "sourceSGnumber", ",", "\[IndentingNewLine]", "\t", 
          RowBox[{"GetSymmetryData", "[", 
           RowBox[{"targetSG", ",", "\"\<Symbol\>\""}], "]"}], ",", 
          "targetSGnumber"}], "]"}], ";", "\[IndentingNewLine]", "\t", 
        RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"iii", ".", " ", "Check"}], " ", "whether", " ", "to", " ", 
       "use", " ", "formatted", " ", "symbol"}], " ", "*)"}], 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"Label", "[", "\"\<CheckSGformat\>\"", "]"}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"targetSG", "=", 
      RowBox[{"ToStandardSetting", "@", "targetSG"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"1.", 
       RowBox[{"I", ".", " ", "Common"}], " ", "transformation", " ", 
       "procedures"}], " ", "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{"'", 
       RowBox[{"CellCentring", "'"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     "\t", 
     RowBox[{"procedureCellCentring", ":=", 
      RowBox[{"(", "\[IndentingNewLine]", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"MissingQ", "@", "targetCentring"}]}], ",", 
         "\[IndentingNewLine]", "\t", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"MissingQ", "@", "sourceCentring"}], "||", 
             RowBox[{"!", 
              RowBox[{"ValueQ", "@", "sourceCentring"}]}]}], ",", 
            "\[IndentingNewLine]", "\t", 
            RowBox[{"sourceCentring", "=", 
             RowBox[{"StringTake", "[", 
              RowBox[{"fullHM", ",", "1"}], "]"}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
          RowBox[{"Which", "[", "\[IndentingNewLine]", "\t", 
           RowBox[{"(*", " ", 
            RowBox[{"No", " ", "change"}], " ", "*)"}], "\[IndentingNewLine]",
            "\t", 
           RowBox[{
            RowBox[{"sourceCentring", "===", "targetCentring"}], ",", 
            "\[IndentingNewLine]", "\t", "Null", ",", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", "\t", 
            RowBox[{"(*", " ", 
             RowBox[{"Transformation", " ", 
              RowBox[{"from", " ", "'"}], 
              RowBox[{"P", "'"}]}], " ", "*)"}], "\[IndentingNewLine]", "\t", 
            
            RowBox[{"sourceCentring", "===", "\"\<P\>\""}], ",", 
            "\[IndentingNewLine]", "\t", 
            RowBox[{"P1", "=", 
             RowBox[{"Inverse", "@", 
              RowBox[{
              "$TransformationMatrices", "[", "\[IndentingNewLine]", "\t", 
               RowBox[{"targetCentring", "<>", "\"\<_to_P\>\""}], "]"}]}]}], 
            ",", "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
            RowBox[{"(*", " ", 
             RowBox[{"Transformation", " ", 
              RowBox[{"to", " ", "'"}], 
              RowBox[{"P", "'"}]}], " ", "*)"}], "\[IndentingNewLine]", "\t", 
            
            RowBox[{"targetCentring", "===", "\"\<P\>\""}], ",", 
            "\[IndentingNewLine]", "\t", 
            RowBox[{"P1", "=", 
             RowBox[{"$TransformationMatrices", "[", 
              RowBox[{"sourceCentring", "<>", "\"\<_to_P\>\""}], "]"}]}], ",",
             "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
            RowBox[{"(*", " ", 
             RowBox[{"Transformation", " ", 
              RowBox[{"via", " ", "'"}], 
              RowBox[{"P", "'"}]}], " ", "*)"}], "\[IndentingNewLine]", "\t", 
            "True", ",", "\[IndentingNewLine]", "\t", 
            RowBox[{
             RowBox[{"P1", "=", 
              RowBox[{"$TransformationMatrices", "[", 
               RowBox[{"sourceCentring", "<>", "\"\<_to_P\>\""}], "]"}]}], 
             ";", "\[IndentingNewLine]", "\t", 
             RowBox[{"P2", "=", 
              RowBox[{"Inverse", "@", 
               RowBox[{"$TransformationMatrices", "[", 
                RowBox[{"targetCentring", "<>", "\"\<_to_P\>\""}], 
                "]"}]}]}]}]}], "\[IndentingNewLine]", "\t", "]"}]}]}], 
        "\[IndentingNewLine]", "\t", "]"}], ")"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{"'", 
       RowBox[{"CellOrigin", "'"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     "\t", 
     RowBox[{"procedureCellOrigin", ":=", 
      RowBox[{"(", "\[IndentingNewLine]", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"KeyExistsQ", "[", 
          RowBox[{"targetSetting", ",", "\"\<CellOrigin\>\""}], "]"}], ",", 
         "\[IndentingNewLine]", "\t", 
         RowBox[{
          RowBox[{"temp", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"sourceSetting", "[", "\"\<CellOrigin\>\"", "]"}], ",", 
             "targetO"}], "}"}]}], ";", "\[IndentingNewLine]", "\t", 
          RowBox[{"shift", "=", 
           RowBox[{"SG", "\[LeftDoubleBracket]", 
            RowBox[{
            "\"\<AlternativeSettings\>\"", ",", "1", ",", 
             "\"\<OriginShift\>\""}], "\[RightDoubleBracket]"}]}], ";", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"MissingQ", "@", "targetO"}]}], ",", 
            "\[IndentingNewLine]", "\t", 
            RowBox[{"(*", " ", 
             RowBox[{
             "Get", " ", "space", " ", "group", " ", "origin", " ", "shift", 
              " ", 
              RowBox[{"(", 
               RowBox[{"shift", " ", "vector"}], ")"}]}], " ", "*)"}], 
            "\[IndentingNewLine]", "\t", 
            RowBox[{"Which", "[", "\[IndentingNewLine]", "\t", 
             RowBox[{
              RowBox[{"temp", "===", 
               RowBox[{"{", 
                RowBox[{"1", ",", "1"}], "}"}]}], ",", "Null", ",", 
              "\[IndentingNewLine]", "\t", 
              RowBox[{"temp", "===", 
               RowBox[{"{", 
                RowBox[{"2", ",", "2"}], "}"}]}], ",", "Null", ",", 
              "\[IndentingNewLine]", "\t", 
              RowBox[{"temp", "===", 
               RowBox[{"{", 
                RowBox[{"1", ",", "2"}], "}"}]}], ",", 
              RowBox[{"p", "=", "shift"}], ",", "\[IndentingNewLine]", "\t", 
              RowBox[{"temp", "===", 
               RowBox[{"{", 
                RowBox[{"2", ",", "1"}], "}"}]}], ",", 
              RowBox[{"p", "=", 
               RowBox[{"-", "shift"}]}]}], "]"}]}], "\[IndentingNewLine]", 
           "\t", "]"}]}]}], "\[IndentingNewLine]", "\t", "]"}], ")"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"--", "-"}], "*", " ", "2.", " ", "Determining", " ", 
       "correct", " ", "transformation", " ", "matrices", " ", "*", 
       RowBox[{"--", "-"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Goto", "[", "system", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"--", " ", "2."}], 
       RowBox[{"A", ".", " ", 
        RowBox[{"Triclinic", " ", "--"}]}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Label", "[", "\"\<Triclinic\>\"", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"i", ".", " ", "'"}], 
       RowBox[{"CellCentring", "'"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     "\t", "procedureCellCentring", ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{"Preparations", " ", "done"}], " ", "*)"}], 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"Goto", "[", "\"\<MetricTransformation\>\"", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"--", " ", "2."}], 
       RowBox[{"B", ".", " ", 
        RowBox[{"Monoclinic", " ", "--"}]}]}], "*)"}], "\[IndentingNewLine]", 
     
     RowBox[{"Label", "[", "\"\<Monoclinic\>\"", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", "Prepartations", " ", "*)"}], "\[IndentingNewLine]", 
     "\t\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"If", " ", "target", " ", "axis", " ", "not", " ", "given"}], 
       ",", " ", 
       RowBox[{"use", " ", "same", " ", "axis", " ", "as", " ", "source"}]}], 
      " ", "*)"}], "\[IndentingNewLine]", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"MissingQ", "@", "targetAxis"}], "||", 
        RowBox[{"!", 
         RowBox[{"ValueQ", "@", "targetAxis"}]}]}], ",", 
       "\[IndentingNewLine]", "\t\t", 
       RowBox[{"targetAxis", "=", 
        RowBox[{"sourceSetting", "[", "\"\<UniqueAxis\>\"", "]"}]}]}], "]"}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"i", ".", " ", "'"}], 
       RowBox[{"UniqueAxis", "'"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     "\t\t", 
     RowBox[{"(*", " ", 
      RowBox[{"Target", " ", "unique", " ", "axis", " ", "transformation"}], 
      " ", "*)"}], "\[IndentingNewLine]", "\t\t", 
     RowBox[{"allowed", "=", 
      RowBox[{"{", "\[IndentingNewLine]", "\t\t", 
       RowBox[{
       "\"\<UniqueAxisB_to_C\>\"", ",", "\[IndentingNewLine]", "\t\t", 
        "\"\<UniqueAxisB_to_A\>\"", ",", "\[IndentingNewLine]", "\t\t", 
        "\"\<UniqueAxisC_to_A\>\""}], "}"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\t\t", 
     RowBox[{"temp", "=", 
      RowBox[{"ToUpperCase", "/@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"sourceSetting", "[", "\"\<UniqueAxis\>\"", "]"}], ",", 
         "targetAxis"}], "}"}]}]}], ";", "\[IndentingNewLine]", "\t", 
     "\[IndentingNewLine]", "\t\t", 
     RowBox[{"(*", " ", 
      RowBox[{"Check", " ", "whether", " ", "P", " ", "or", " ", "Q", " ", 
       RowBox[{"(", "inverse", ")"}], " ", "is", " ", "needed"}], " ", "*)"}],
      "\[IndentingNewLine]", "\t\t", 
     RowBox[{"cmd", "=", 
      RowBox[{"\"\<UniqueAxis\>\"", "<>", 
       RowBox[{"temp", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
        "<>", "\"\<_to_\>\"", "<>", 
       RowBox[{
       "temp", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
     ";", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"MemberQ", "[", 
        RowBox[{"allowed", ",", "cmd"}], "]"}], ",", "\[IndentingNewLine]", 
       "\t\t", 
       RowBox[{"Q", "=", "False"}], ",", "\[IndentingNewLine]", "\t\t", 
       RowBox[{
        RowBox[{"Q", "=", "True"}], ";", "\[IndentingNewLine]", "\t\t\t", 
        RowBox[{"cmd", "=", 
         RowBox[{"\"\<UniqueAxis\>\"", "<>", 
          RowBox[{
          "temp", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
          "<>", "\"\<_to_\>\"", "<>", 
          RowBox[{
          "temp", "\[LeftDoubleBracket]", "1", 
           "\[RightDoubleBracket]"}]}]}]}]}], "\[IndentingNewLine]", "\t\t", 
      "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"(*", " ", 
      RowBox[{"Target", " ", "unique", " ", "axis", " ", "transformation"}], 
      " ", "*)"}], "\[IndentingNewLine]", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"SameQ", "@@", "temp"}]}], ",", "\[IndentingNewLine]", "\t\t", 
       RowBox[{
        RowBox[{"P1", "=", 
         RowBox[{"$TransformationMatrices", "[", "cmd", "]"}]}], ";", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"If", "[", 
         RowBox[{"Q", ",", 
          RowBox[{"P1", "=", 
           RowBox[{"Inverse", "@", "P1"}]}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "\t\t", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"ii", ".", " ", "'"}], 
       RowBox[{"CellChoice", "'"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     "\t\t", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Check", " ", "if", " ", "cell", " ", "choice", " ", "is", " ", "an", 
       " ", "available", " ", "setting"}], " ", "*)"}], "\t\t", 
     "\[IndentingNewLine]", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"!", 
         RowBox[{"KeyExistsQ", "[", 
          RowBox[{
           RowBox[{"SG", "[", "\"\<Setting\>\"", "]"}], ",", 
           "\"\<CellChoice\>\""}], "]"}]}], "\[IndentingNewLine]", "\t\t", "&&", 
        RowBox[{"KeyExistsQ", "[", 
         RowBox[{"targetSetting", ",", "\"\<CellChoice\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", "\t\t", 
       RowBox[{
        RowBox[{"Message", "[", 
         RowBox[{
          RowBox[{"UnitCellTransformation", "::", "command"}], ",", 
          "\"\<CellChoice\>\""}], "]"}], ";", "\[IndentingNewLine]", "\t\t", 
        RowBox[{"Abort", "[", "]"}]}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\t\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"MissingQ", "@", "targetCC"}]}], ",", "\[IndentingNewLine]",
          "\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Matrix", " ", "for", " ", "checking", " ", "transformation", " ", 
           "signature"}], " ", "*)"}], "\[IndentingNewLine]", "\t\t", 
         RowBox[{
          RowBox[{"temp", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "1", ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "0", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", "\t\t", 
          RowBox[{"temp", "=", 
           RowBox[{"temp", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{"sg", "[", 
              RowBox[{"\"\<Setting\>\"", ",", "\"\<CellChoice\>\""}], "]"}], 
             ",", "targetCC"}], "\[RightDoubleBracket]"}]}], ";", 
          "\[IndentingNewLine]", "\t\t", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"Use", " ", "regular"}], ",", " ", "none", ",", " ", 
            RowBox[{"or", " ", "inverse", " ", "transformation"}]}], " ", 
           "*)"}], "\[IndentingNewLine]", "\t\t", 
          RowBox[{"Which", "[", "\[IndentingNewLine]", "\t\t", 
           RowBox[{
            RowBox[{"temp", "===", 
             RowBox[{"-", "1"}]}], ",", 
            RowBox[{"Q", "=", "True"}], ",", "\[IndentingNewLine]", "\t\t", 
            RowBox[{"temp", "===", "0"}], ",", 
            RowBox[{"Goto", "[", "\"\<MetricTransformation\>\"", "]"}], ",", 
            "\[IndentingNewLine]", "\t\t", 
            RowBox[{"temp", "===", "1"}], ",", 
            RowBox[{"Q", "=", "False"}]}], "\[IndentingNewLine]", "\t\t", 
           "]"}], ";", "\[IndentingNewLine]", "\t\t", 
          RowBox[{"cmd", "=", 
           RowBox[{"\"\<UniqueAxis\>\"", "<>", 
            RowBox[{"ToUpperCase", "@", "targetAxis"}], "\[IndentingNewLine]",
             "\t\t", "<>", "\"\<_CellChoice+1\>\""}]}], ";", 
          "\[IndentingNewLine]", "\t\t", 
          RowBox[{"P2", "=", 
           RowBox[{"$TransformationMatrices", "[", "cmd", "]"}]}], ";", 
          "\[IndentingNewLine]", "\t\t", 
          RowBox[{"If", "[", 
           RowBox[{"Q", ",", 
            RowBox[{"P2", "=", 
             RowBox[{"Inverse", "@", "P2"}]}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "\t\t", "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{"Preparations", " ", "done"}], " ", "*)"}], 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"Goto", "[", "\"\<MetricTransformation\>\"", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"--", " ", "2."}], 
       RowBox[{"C", ".", " ", 
        RowBox[{"Orthorhombic", " ", "--"}]}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Label", "[", "\"\<Orthorhombic\>\"", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"i", ".", " ", "'"}], 
       RowBox[{"AxisPermutation", "'"}]}], " ", "*)"}], "\[IndentingNewLine]",
      "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"MissingQ", "@", "targetAP"}]}], ",", "\[IndentingNewLine]", 
       "\t\t", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Check", " ", "which", " ", "matrices", " ", "are", " ", "needed"}], 
        " ", "*)"}], "\[IndentingNewLine]", "\t\t", 
       RowBox[{
        RowBox[{"temp", "=", 
         RowBox[{"ToUpperCase", "/@", "\[IndentingNewLine]", "\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"sourceSetting", "[", "\"\<AxisPermutation\>\"", "]"}], 
            ",", "targetAP"}], "}"}]}]}], ";", "\[IndentingNewLine]", "\t\t", 
        
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SameQ", "@@", "temp"}], ",", "\[IndentingNewLine]", "\t\t", 
          RowBox[{"(*", " ", 
           RowBox[{"Same", " ", "axis", " ", 
            RowBox[{"permutation", " ", "--"}], " ", "no", " ", "transform", 
            " ", "required"}], " ", "*)"}], "\[IndentingNewLine]", "\t\t", 
          "Null", ",", "\[IndentingNewLine]", "\t\t", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"MemberQ", "[", 
              RowBox[{"temp", ",", "\"\<DEF\>\""}], "]"}]}], ",", 
            "\[IndentingNewLine]", "\t\t", 
            RowBox[{"(*", " ", 
             RowBox[{"Chain", " ", 
              RowBox[{"through", " ", "'"}], 
              RowBox[{"abc", "'"}]}], " ", "*)"}], "\[IndentingNewLine]", 
            "\t\t", 
            RowBox[{
             RowBox[{"x", "=", 
              RowBox[{
               RowBox[{
               "temp", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                "<>", "\"\<_to_DEF\>\""}]}], ";", "\[IndentingNewLine]", 
             "\t\t", 
             RowBox[{"y", "=", 
              RowBox[{
               RowBox[{
               "temp", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
                "<>", "\"\<_to_DEF\>\""}]}], ";", "\[IndentingNewLine]", 
             "\t\t", 
             RowBox[{"P1", "=", 
              RowBox[{"$TransformationMatrices", "[", "x", "]"}]}], ";", 
             "\[IndentingNewLine]", "\t\t", 
             RowBox[{"P2", "=", 
              RowBox[{"Inverse", "@", 
               RowBox[{"$TransformationMatrices", "[", "y", "]"}]}]}]}], ",", 
            "\[IndentingNewLine]", "\t\t", 
            RowBox[{"(*", " ", 
             RowBox[{
             "OR", " ", "use", " ", "one", " ", "of", " ", "the", " ", "six", 
              " ", "transformations"}], " ", "*)"}], "\[IndentingNewLine]", 
            "\t\t", 
            RowBox[{
             RowBox[{"cmd", "=", 
              RowBox[{
               RowBox[{
               "temp", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                "<>", "\"\<_to_\>\"", "<>", 
               RowBox[{
               "temp", "\[LeftDoubleBracket]", "2", 
                "\[RightDoubleBracket]"}]}]}], ";", "\[IndentingNewLine]", 
             "\t\t", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"KeyExistsQ", "[", 
                RowBox[{"$TransformationMatrices", ",", "cmd"}], "]"}], ",", 
               "\[IndentingNewLine]", "\t\t", 
               RowBox[{"P1", "=", 
                RowBox[{"$TransformationMatrices", "[", "cmd", "]"}]}], ",", 
               "\[IndentingNewLine]", "\t\t", 
               RowBox[{"P1", "=", 
                RowBox[{"Inverse", "@", 
                 RowBox[{
                 "$TransformationMatrices", "[", "\[IndentingNewLine]", "\t", 
                  
                  RowBox[{
                   RowBox[{
                   "temp", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "<>", "\"\<_to_\>\"", "<>", 
                   RowBox[{
                   "temp", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}]}]}]}], 
              "\[IndentingNewLine]", "\t\t", "]"}]}]}], "\[IndentingNewLine]",
            "\t\t", "]"}]}], "\[IndentingNewLine]", "\t\t", "]"}]}]}], 
      "\[IndentingNewLine]", "\t\t", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"ii", ".", " ", "'"}], 
       RowBox[{"CellOrigin", "'"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     "\t", "procedureCellOrigin", ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{"Preparations", " ", "done"}], " ", "*)"}], 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"Goto", "[", "\"\<MetricTransformation\>\"", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"--", " ", "2."}], 
       RowBox[{"D", ".", " ", 
        RowBox[{"Tetragonal", " ", "--"}]}]}], "*)"}], "\[IndentingNewLine]", 
     
     RowBox[{"Label", "[", "\"\<Tetragonal\>\"", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{"Checks", " ", "and", " ", "updates"}], " ", "*)"}], 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"MissingQ", "@", "sourceCentring"}], "||", 
        RowBox[{"!", 
         RowBox[{"ValueQ", "@", "sourceCentring"}]}]}], ",", 
       "\[IndentingNewLine]", "\t", 
       RowBox[{"sourceCentring", "=", 
        RowBox[{"StringTake", "[", "\[IndentingNewLine]", "\t", 
         RowBox[{
          RowBox[{"sg", "[", 
           RowBox[{"\"\<Name\>\"", ",", "\"\<HermannMauguinShort\>\""}], 
           "]"}], ",", "1"}], "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"MissingQ", "@", "targetCentring"}], "||", 
        RowBox[{"!", 
         RowBox[{"ValueQ", "@", "targetCentring"}]}]}], ",", 
       "\[IndentingNewLine]", "\t", 
       RowBox[{"targetCentring", "=", 
        RowBox[{"StringTake", "[", "\[IndentingNewLine]", "\t", 
         RowBox[{
          RowBox[{"SG", "[", 
           RowBox[{"\"\<Name\>\"", ",", "\"\<HermannMauguinShort\>\""}], 
           "]"}], ",", "1"}], "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"i", ".", " ", "'"}], 
       RowBox[{"CellCentring", "'"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     "\t", "procedureCellCentring", ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"ii", ".", " ", "'"}], 
       RowBox[{"MultipleCell", "'"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"KeyExistsQ", "[", 
        RowBox[{"targetSetting", ",", "\"\<MultipleCell\>\""}], "]"}], ",", 
       "\[IndentingNewLine]", "\t", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"If", " ", "already", " ", "transformed"}], ",", " ", 
         RowBox[{"transform", " ", 
          RowBox[{"to", " ", "'"}], 
          RowBox[{"P", "'"}], " ", 
          RowBox[{"or", " ", "'"}], 
          RowBox[{"I", "'"}]}]}], " ", "*)"}], "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{"tetList", ",", "sourceCell"}], "]"}], ",", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{"P1", "=", 
           RowBox[{"Inverse", "@", 
            RowBox[{
            "$TransformationMatrices", "[", "\[IndentingNewLine]", "\t", 
             RowBox[{"\"\<TetragonalProjection\>\"", "<>", 
              RowBox[{"StringTake", "[", 
               RowBox[{"sourceCell", ",", 
                RowBox[{"-", "1"}]}], "]"}]}], "]"}]}]}]}], 
         "\[IndentingNewLine]", "\t", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"(*", " ", 
         RowBox[{"Transforming", " ", "to", " ", "target", " ", "cell"}], " ",
          "*)"}], "\[IndentingNewLine]", "\t", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"MemberQ", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\"\<P\>\"", ",", "\"\<I\>\""}], "}"}], ",", 
             "targetCell"}], "]"}]}], ",", "\[IndentingNewLine]", "\t", 
          RowBox[{"P2", "=", 
           RowBox[{
           "$TransformationMatrices", "[", "\[IndentingNewLine]", "\t", 
            RowBox[{"\"\<TetragonalProjection\>\"", "<>", 
             RowBox[{"StringTake", "[", 
              RowBox[{"targetCell", ",", 
               RowBox[{"-", "1"}]}], "]"}]}], "]"}]}]}], 
         "\[IndentingNewLine]", "\t", "]"}]}]}], "\[IndentingNewLine]", "\t", 
      "]"}], ";", "\[IndentingNewLine]", "\t", "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"iii", ".", " ", "'"}], 
       RowBox[{"CellOrigin", "'"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     "\t", "procedureCellOrigin", ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{"Preparations", " ", "done"}], " ", "*)"}], 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"Goto", "[", "\"\<MetricTransformation\>\"", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"--", " ", "2."}], 
       RowBox[{"E", ".", " ", "Hexagonal"}], " ", "crystal", " ", 
       RowBox[{"family", " ", "--"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Label", "[", "\"\<Trigonal\>\"", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Label", "[", "\"\<Hexagonal\>\"", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{"Checks", " ", "and", " ", "updates"}], " ", "*)"}], 
     "\[IndentingNewLine]", "\t\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Reinstate", " ", "'"}], 
       RowBox[{"MultipleCell", "'"}], " ", "label"}], " ", "*)"}], 
     "\[IndentingNewLine]", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"MissingQ", "@", "sourceCell"}], "||", 
        RowBox[{"!", 
         RowBox[{"ValueQ", "@", "sourceCell"}]}]}], ",", 
       "\[IndentingNewLine]", "\t\t", 
       RowBox[{"sourceCell", "=", 
        RowBox[{"sourceSetting", "[", "\"\<MultipleCell\>\"", "]"}]}]}], 
      "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"(*", " ", 
      RowBox[{"Check", " ", "rhombohedral", " ", "source", " ", "setting"}], 
      " ", "*)"}], "\[IndentingNewLine]", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"MissingQ", "@", "sourceRS"}], "||", 
        RowBox[{"!", 
         RowBox[{"ValueQ", "@", "sourceRS"}]}]}], ",", "\[IndentingNewLine]", 
       "\t\t", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Assume", " ", "main", " ", "space", " ", "group", " ", "setting"}], 
        " ", "*)"}], "\[IndentingNewLine]", "\t\t", 
       RowBox[{"sourceRS", "=", "\"\<obverse\>\""}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"(*", " ", 
      RowBox[{"Check", " ", "rhombohedral", " ", "target", " ", "setting"}], 
      " ", "*)"}], "\[IndentingNewLine]", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"MissingQ", "@", "targetRS"}], "&&", 
        RowBox[{"MemberQ", "[", 
         RowBox[{"hex3List", ",", "targetCell"}], "]"}]}], ",", 
       RowBox[{"targetRS", "=", "\"\<obverse\>\""}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"!", 
         RowBox[{"MissingQ", "@", "targetRS"}]}], "&&", 
        RowBox[{"targetCell", "===", "\"\<R\>\""}]}], ",", 
       RowBox[{"targetCell", "=", "\"\<R1\>\""}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
     RowBox[{"Which", "[", "\[IndentingNewLine]", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"A", ".", " ", "Rhombohedral"}], " ", "space", " ", "group"}],
        " ", "*)"}], "\[IndentingNewLine]", "\t", 
      RowBox[{
       RowBox[{"SubsetQ", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "146", ",", "148", ",", "155", ",", "160", ",", "161", ",", "166", 
           ",", "167"}], "}"}], ",", "\[IndentingNewLine]", "\t", 
         RowBox[{"{", 
          RowBox[{"sourceSGnumber", ",", "targetSGnumber"}], "}"}]}], "]"}], 
       ",", "\[IndentingNewLine]", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"(*", " ", 
        RowBox[{"Check", " ", "target", " ", "command"}], " ", "*)"}], 
       "\[IndentingNewLine]", "\t\t", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"MemberQ", "[", 
            RowBox[{
             RowBox[{"Flatten", "@", 
              RowBox[{"Join", "[", "\[IndentingNewLine]", "\t", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "\"\<R\>\"", "}"}], ",", "hex3List", ",", 
                 "monoList"}], "}"}], "]"}]}], ",", "targetCell"}], "]"}]}], 
          ",", "\[IndentingNewLine]", "\t\t", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{
             RowBox[{"UnitCellTransformation", "::", "invalidSG"}], ",", 
             "\[IndentingNewLine]", "\t\t\t", "targetCell"}], "]"}], ";", 
           RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]",
         "\[IndentingNewLine]", "\t\t", 
        RowBox[{"Which", "[", "\[IndentingNewLine]", "\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"a", ".", " ", "Rhombohedral"}], " ", "source"}], " ", 
          "*)"}], "\[IndentingNewLine]", "\t\t", 
         RowBox[{
          RowBox[{"sourceCell", "===", "\"\<R\>\""}], ",", 
          "\[IndentingNewLine]", "\t\t", 
          RowBox[{"Which", "[", "\[IndentingNewLine]", "\t\t", 
           RowBox[{"(*", " ", 
            RowBox[{"a", 
             RowBox[{".1", ".", " ", "Rhombohedral"}], " ", "target"}], " ", 
            "*)"}], "\[IndentingNewLine]", "\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{"targetCell", "===", "\"\<R\>\""}], "&&", 
             RowBox[{"MissingQ", "@", "targetRS"}]}], ",", 
            "\[IndentingNewLine]", "\t\t\t", 
            RowBox[{"Goto", "[", "\"\<MatricesDone\>\"", "]"}], ",", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", "\t\t", 
            RowBox[{"(*", " ", 
             RowBox[{"a", 
              RowBox[{".2", ".", " ", "Triple"}], " ", "hexagonal", " ", 
              "target"}], " ", "*)"}], "\[IndentingNewLine]", "\t\t", 
            RowBox[{"MemberQ", "[", 
             RowBox[{"hex3List", ",", "targetCell"}], "]"}], ",", 
            "\[IndentingNewLine]", "\t\t", 
            RowBox[{"P1", "=", 
             RowBox[{
             "$TransformationMatrices", "[", "\[IndentingNewLine]", "\t\t", 
              RowBox[{
              "\"\<Rhombohedral_to_\>\"", "<>", "targetCell", "<>", 
               "\"\<_\>\"", "<>", "targetRS"}], "]"}]}], ",", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", "\t\t", 
            RowBox[{"(*", " ", 
             RowBox[{"a", 
              RowBox[{".3", ".", " ", "Monoclinic"}], " ", "target"}], " ", 
             "*)"}], "\[IndentingNewLine]", "\t\t", "True", ",", 
            "\[IndentingNewLine]", "\t\t", 
            RowBox[{"P1", "=", 
             RowBox[{
             "$TransformationMatrices", "[", "\[IndentingNewLine]", "\t\t", 
              RowBox[{
              "\"\<Rhombohedral_to_Monoclinic_\>\"", "<>", "targetCell"}], 
              "]"}]}]}], "\[IndentingNewLine]", "\t\t", "]"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", "\t\t", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"b", ".", " ", "Regular"}], " ", "hexagonal", " ", 
            RowBox[{"(", 
             RowBox[{"R1", ",", " ", "R2", ",", " ", "R3"}], ")"}], " ", 
            "source"}], " ", "*)"}], "\[IndentingNewLine]", "\t\t", 
          RowBox[{"MemberQ", "[", 
           RowBox[{"hex3List", ",", "sourceCell"}], "]"}], ",", 
          "\[IndentingNewLine]", "\t\t", 
          RowBox[{"Which", "[", "\[IndentingNewLine]", "\t\t", 
           RowBox[{"(*", " ", 
            RowBox[{"b", 
             RowBox[{".1", ".", " ", "Rhombohedral"}], " ", "target"}], " ", 
            "*)"}], "\[IndentingNewLine]", "\t\t", 
           RowBox[{
            RowBox[{"targetCell", "===", "\"\<R\>\""}], ",", 
            "\[IndentingNewLine]", "\t\t", 
            RowBox[{"P1", "=", 
             RowBox[{"Inverse", "@", 
              RowBox[{
              "$TransformationMatrices", "[", "\[IndentingNewLine]", "\t\t", 
               RowBox[{
               "\"\<Rhombohedral_to_\>\"", "<>", "sourceCell", "<>", 
                "\"\<_\>\"", "<>", "sourceRS"}], "]"}]}]}], ",", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", "\t\t", 
            RowBox[{"(*", " ", 
             RowBox[{"b", 
              RowBox[{".2", ".", " ", "Triple"}], " ", "hexagonal", " ", 
              "target"}], " ", "*)"}], "\[IndentingNewLine]", "\t\t", 
            RowBox[{"MemberQ", "[", 
             RowBox[{"hex3List", ",", "targetCell"}], "]"}], ",", 
            "\[IndentingNewLine]", "\t\t", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"sourceCell", "===", "targetCell"}], "&&", 
                RowBox[{"sourceRS", "===", "targetRS"}]}], ",", 
               "\[IndentingNewLine]", "\t\t", 
               RowBox[{"Goto", "[", "\"\<MatricesDone\>\"", "]"}]}], "]"}], 
             ";", "\[IndentingNewLine]", "\t\t", 
             RowBox[{"P1", "=", 
              RowBox[{"Inverse", "@", 
               RowBox[{
               "$TransformationMatrices", "[", "\[IndentingNewLine]", "\t\t", 
                
                RowBox[{
                "\"\<Rhombohedral_to_\>\"", "<>", "sourceCell", "<>", 
                 "\"\<_\>\"", "<>", "sourceRS"}], "]"}]}]}], ";", 
             "\[IndentingNewLine]", "\t\t", 
             RowBox[{"P2", "=", 
              RowBox[{
              "$TransformationMatrices", "[", "\[IndentingNewLine]", "\t\t", 
               RowBox[{
               "\"\<Rhombohedral_to_\>\"", "<>", "targetCell", "<>", 
                "\"\<_\>\"", "<>", "targetRS"}], "]"}]}]}], ",", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", "\t\t", 
            RowBox[{"(*", " ", 
             RowBox[{"b", 
              RowBox[{".3", ".", " ", "Monoclinic"}], " ", "target"}], " ", 
             "*)"}], "\[IndentingNewLine]", "\t\t", "True", ",", 
            "\[IndentingNewLine]", "\t\t", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"sourceCell", "===", "\"\<R1\>\""}], "&&", 
               RowBox[{"sourceRS", "===", "\"\<obverse\>\""}]}], ",", 
              "\[IndentingNewLine]", "\t\t", 
              RowBox[{"P1", "=", 
               RowBox[{
               "$TransformationMatrices", "[", "\[IndentingNewLine]", "\t\t", 
                
                RowBox[{
                "\"\<TripleHexagonal_to_Monoclinic_\>\"", "<>", 
                 "targetCell"}], "]"}]}], ",", "\[IndentingNewLine]", "\t\t", 
              
              RowBox[{
               RowBox[{"P1", "=", 
                RowBox[{"Inverse", "@", 
                 RowBox[{
                 "$TransformationMatrices", "[", "\[IndentingNewLine]", 
                  "\t\t", 
                  RowBox[{"\"\<Rhombohedral_to_\>\"", 
                   RowBox[{
                   "sourceCell", "<>", "\"\<_\>\"", "<>", "sourceRS"}]}], 
                  "]"}]}]}], ";", "\[IndentingNewLine]", "\t\t", 
               RowBox[{"P2", "=", 
                RowBox[{
                "$TransformationMatrices", "[", "\[IndentingNewLine]", "\t\t", 
                 RowBox[{
                 "\"\<Rhombohedral_to_Monoclinic_\>\"", "<>", "targetCell"}], 
                 "]"}]}]}]}], "]"}]}], "\[IndentingNewLine]", "\t\t", "]"}], 
          ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", "\t\t", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"c", ".", " ", "Monoclinic"}], " ", "source"}], " ", 
           "*)"}], "\[IndentingNewLine]", "\t\t", 
          RowBox[{"MemberQ", "[", 
           RowBox[{"monoList", ",", "sourceCell"}], "]"}], ",", 
          "\[IndentingNewLine]", "\t\t", 
          RowBox[{"Which", "[", "\[IndentingNewLine]", "\t\t", 
           RowBox[{"(*", " ", 
            RowBox[{"c", 
             RowBox[{".1", ".", " ", "Rhombohedral"}], " ", "target"}], " ", 
            "*)"}], "\[IndentingNewLine]", "\t\t", 
           RowBox[{
            RowBox[{"targetCell", "===", "\"\<R\>\""}], ",", 
            "\[IndentingNewLine]", "\t\t", 
            RowBox[{"P1", "=", 
             RowBox[{"Inverse", "@", 
              RowBox[{
              "$TransformationMatrices", "[", "\[IndentingNewLine]", "\t\t", 
               RowBox[{
               "\"\<Rhombohedral_to_Monoclinic_\>\"", "<>", "sourceCell"}], 
               "]"}]}]}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            "\t\t", 
            RowBox[{"(*", " ", 
             RowBox[{"c", 
              RowBox[{".2", ".", " ", "Regular"}], " ", "hexagonal", " ", 
              RowBox[{"(", 
               RowBox[{"R1", ",", " ", "R2", ",", " ", "R3"}], ")"}], "l", 
              " ", "target"}], " ", "*)"}], "\[IndentingNewLine]", "\t\t", 
            RowBox[{"MemberQ", "[", 
             RowBox[{"hex3List", ",", "targetCell"}], "]"}], ",", 
            "\[IndentingNewLine]", "\t\t", 
            RowBox[{
             RowBox[{"P1", "=", 
              RowBox[{"Inverse", "@", 
               RowBox[{
               "$TransformationMatrices", "[", "\[IndentingNewLine]", "\t\t", 
                
                RowBox[{
                "\"\<Rhombohedral_to_Monoclinic_\>\"", "<>", "sourceCell"}], 
                "]"}]}]}], ";", "\[IndentingNewLine]", "\t\t", 
             RowBox[{"P2", "=", 
              RowBox[{
              "$TransformationMatrices", "[", "\[IndentingNewLine]", "\t\t", 
               RowBox[{
               "\"\<Rhombohedral_to_\>\"", "<>", "targetCell", "<>", 
                "\"\<_\>\"", "<>", "targetRS"}], "]"}]}]}], ",", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", "\t\t", 
            RowBox[{"(*", " ", 
             RowBox[{"c", 
              RowBox[{".3", ".", " ", "Monoclinic"}], " ", "target"}], " ", 
             "*)"}], "\[IndentingNewLine]", "\t\t", "True", ",", 
            "\[IndentingNewLine]", "\t\t", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"sourceCell", "===", "targetCell"}], ",", 
               RowBox[{"Goto", "[", "\"\<MatricesDone\>\"", "]"}]}], "]"}], 
             ";", "\[IndentingNewLine]", "\t\t", 
             RowBox[{"P1", "=", 
              RowBox[{"Inverse", "@", 
               RowBox[{
               "$TransformationMatrices", "[", "\[IndentingNewLine]", "\t\t", 
                
                RowBox[{
                "\"\<Rhombohedral_to_Monoclinic_\>\"", "<>", "sourceCell"}], 
                "]"}]}]}], ";", "\[IndentingNewLine]", "\t\t", 
             RowBox[{"P2", "=", 
              RowBox[{
              "$TransformationMatrices", "[", "\[IndentingNewLine]", "\t\t", 
               RowBox[{
               "\"\<Rhombohedral_to_Monoclinic_\>\"", "<>", "targetCell"}], 
               "]"}]}]}]}], "\[IndentingNewLine]", "\t\t", "]"}]}], 
         "\[IndentingNewLine]", "\t\t", "]"}]}], ",", "\[IndentingNewLine]", 
       "\t", "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"B", ".", " ", "Transformation"}], " ", "of", " ", "the", 
         " ", "hexagonal", " ", "lattice"}], " ", "*)"}], 
       "\[IndentingNewLine]", "\t", "True", ",", "\[IndentingNewLine]", "\t", 
       "\[IndentingNewLine]", "\t", 
       RowBox[{"(*", " ", 
        RowBox[{"Check", " ", "if", " ", "target", " ", "is", " ", "valid"}], 
        " ", "*)"}], "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"MemberQ", "[", 
            RowBox[{
             RowBox[{"Flatten", "@", 
              RowBox[{"Join", "[", "\[IndentingNewLine]", "\t", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "\"\<P\>\"", "}"}], ",", "hexList", ",", 
                 "monoList"}], "}"}], "]"}]}], ",", "targetCell"}], "]"}]}], 
          ",", "\[IndentingNewLine]", "\t\t", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{
             RowBox[{"UnitCellTransformation", "::", "invalidSG"}], ",", 
             "\[IndentingNewLine]", "\t\t\t", "targetCell"}], "]"}], ";", 
           RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";", "\[IndentingNewLine]",
         "\[IndentingNewLine]", "\t", 
        RowBox[{"M", "=", 
         RowBox[{"Flatten", "@", 
          RowBox[{"DeleteCases", "[", "\[IndentingNewLine]", "\t", 
           RowBox[{
            RowBox[{"StringCases", "[", 
             RowBox[{
              RowBox[{"Keys", "@", "$TransformationMatrices"}], ",", 
              "\[IndentingNewLine]", "\t", 
              RowBox[{
              "StartOfString", "~~", "\"\<Hexagonal\>\"", "~~", "__"}]}], 
             "]"}], ",", 
            RowBox[{"{", "}"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MissingQ", "@", "sourceCell"}], ",", 
          RowBox[{"sourceCell", "=", "\"\<P\>\""}]}], "]"}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "\t\t", 
        RowBox[{"Which", "[", "\[IndentingNewLine]", "\t\t", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"a", ".", " ", "Primitive"}], " ", "hexagonal", " ", 
           "source"}], " ", "*)"}], "\[IndentingNewLine]", "\t\t", 
         RowBox[{
          RowBox[{"sourceCell", "===", "\"\<P\>\""}], ",", 
          "\[IndentingNewLine]", "\t\t", 
          RowBox[{"Which", "[", "\[IndentingNewLine]", "\t\t", 
           RowBox[{"(*", " ", 
            RowBox[{"a", 
             RowBox[{".1", ".", " ", "No"}], " ", "change"}], " ", "*)"}], 
           "\[IndentingNewLine]", "\t\t", 
           RowBox[{
            RowBox[{"targetCell", "===", "\"\<P\>\""}], ",", 
            RowBox[{"Goto", "[", "\"\<MatricesDone\>\"", "]"}], ",", 
            "\[IndentingNewLine]", "\t\t", 
            RowBox[{"(*", " ", 
             RowBox[{"a", 
              RowBox[{".2", ".", " ", "Special"}], " ", "hexagonal", " ", 
              "target"}], " ", "*)"}], "\[IndentingNewLine]", "\t\t", 
            RowBox[{"MemberQ", "[", 
             RowBox[{"hexList", ",", "targetCell"}], "]"}], ",", 
            "\[IndentingNewLine]", "\t\t", 
            RowBox[{
             RowBox[{"temp", "=", 
              RowBox[{"Select", "[", 
               RowBox[{"M", ",", 
                RowBox[{
                 RowBox[{"StringContainsQ", "[", 
                  RowBox[{"#", ",", "targetCell"}], "]"}], "&"}]}], "]"}]}], 
             ";", "\[IndentingNewLine]", "\t\t", 
             RowBox[{"P1", "=", 
              RowBox[{"$TransformationMatrices", "@@", "temp"}]}]}]}], 
           "\[IndentingNewLine]", "\t\t", "]"}], ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", "\t\t", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"b", ".", " ", "Special"}], " ", "hexagonal", " ", 
            "source"}], " ", "*)"}], "\[IndentingNewLine]", "\t\t", 
          RowBox[{"MemberQ", "[", 
           RowBox[{"hexList", ",", "sourceCell"}], "]"}], ",", 
          "\[IndentingNewLine]", "\t\t", 
          RowBox[{"Which", "[", "\[IndentingNewLine]", "\t\t", 
           RowBox[{"(*", " ", 
            RowBox[{"b", 
             RowBox[{".1", ".", " ", "To"}], " ", "primitive", " ", 
             "hexagonal", " ", "cell"}], " ", "*)"}], "\[IndentingNewLine]", 
           "\t\t", 
           RowBox[{
            RowBox[{"targetCell", "===", "\"\<P\>\""}], ",", 
            "\[IndentingNewLine]", "\t\t", 
            RowBox[{
             RowBox[{"temp", "=", 
              RowBox[{"Select", "[", 
               RowBox[{"M", ",", 
                RowBox[{
                 RowBox[{"StringContainsQ", "[", 
                  RowBox[{"#", ",", "targetCell"}], "]"}], "&"}]}], "]"}]}], 
             ";", "\[IndentingNewLine]", "\t\t", 
             RowBox[{"P1", "=", 
              RowBox[{
               RowBox[{"Inverse", "@", "$TransformationMatrices"}], "@@", 
               "temp"}]}]}], ",", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", "\t\t", 
            RowBox[{"(*", " ", 
             RowBox[{"b", 
              RowBox[{".2", ".", " ", "To"}], " ", "special", " ", 
              "hexagonal", " ", "target"}], " ", "*)"}], 
            "\[IndentingNewLine]", "\t\t", 
            RowBox[{"MemberQ", "[", 
             RowBox[{"hexList", ",", "targetCell"}], "]"}], ",", 
            "\[IndentingNewLine]", "\t\t", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"sourceCell", "===", "targetCell"}], ",", 
               RowBox[{"Goto", "[", "\"\<MatricesDone\>\"", "]"}]}], "]"}], 
             ";", "\[IndentingNewLine]", "\t\t", 
             RowBox[{"temp", "=", 
              RowBox[{"Select", "[", 
               RowBox[{"M", ",", 
                RowBox[{
                 RowBox[{"StringContainsQ", "[", 
                  RowBox[{"#", ",", "sourceCell"}], "]"}], "&"}]}], "]"}]}], 
             ";", "\[IndentingNewLine]", "\t\t", 
             RowBox[{"P1", "=", 
              RowBox[{"Inverse", "[", 
               RowBox[{"$TransformationMatrices", "@@", "temp"}], "]"}]}], 
             ";", "\[IndentingNewLine]", "\t\t", 
             RowBox[{"temp", "=", 
              RowBox[{"Select", "[", 
               RowBox[{"M", ",", 
                RowBox[{
                 RowBox[{"StringContainsQ", "[", 
                  RowBox[{"#", ",", "targetCell"}], "]"}], "&"}]}], "]"}]}], 
             ";", "\[IndentingNewLine]", "\t\t", 
             RowBox[{"P2", "=", 
              RowBox[{"$TransformationMatrices", "@@", "temp"}]}]}]}], 
           "\[IndentingNewLine]", "\t\t", "]"}]}], "\[IndentingNewLine]", 
         "\t\t", "]"}]}]}], "\[IndentingNewLine]", "\t", "]"}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"Label", "[", "\"\<MatricesDone\>\"", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{"Preparations", " ", "done"}], " ", "*)"}], 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"Goto", "[", "\"\<MetricTransformation\>\"", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"--", " ", "2."}], 
       RowBox[{"F", ".", " ", 
        RowBox[{"Cubic", " ", "--"}]}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Label", "[", "\"\<Cubic\>\"", "]"}], ";", "\[IndentingNewLine]",
      "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"i", ".", " ", "'"}], 
       RowBox[{"CellCentring", "'"}]}], " ", "*)"}], " ", 
     "\[IndentingNewLine]", "\t", "procedureCellCentring", ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"ii", ".", " ", "'"}], 
       RowBox[{"CellOrigin", "'"}]}], " ", "*)"}], "\[IndentingNewLine]", 
     "\t", "procedureCellOrigin", ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{"Preparations", " ", "done"}], " ", "*)"}], 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"Goto", "[", "\"\<MetricTransformation\>\"", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"--", "-"}], "*", " ", "3.", " ", "Carrying", " ", "out", " ", 
       "transformations", " ", "*", 
       RowBox[{"--", "-"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"3.", 
       RowBox[{"A", ".", " ", "Preparations"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Label", "[", "\"\<MetricTransformation\>\"", "]"}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"P", "=", 
      RowBox[{"P1", ".", "P2"}]}], ";", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"returnP", "===", "All"}], ",", 
       RowBox[{"Return", "@", 
        RowBox[{"{", 
         RowBox[{"P1", ",", "P2"}], "}"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{"returnP", ",", 
       RowBox[{"Return", "@", "P"}]}], "]"}], ";", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{"Q", "=", 
      RowBox[{"Inverse", "@", "P"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"q", "=", 
      RowBox[{"-", 
       RowBox[{"Q", ".", "p"}]}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"G", "=", 
      RowBox[{
       RowBox[{"Transpose", "[", "P", "]"}], ".", "G", ".", "P"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
     RowBox[{"newlattice", "=", 
      RowBox[{"Association", "@", 
       RowBox[{"Thread", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\"\<a\>\"", ",", "\"\<b\>\"", ",", "\"\<c\>\"", ",", 
           "\"\<\[Alpha]\>\"", ",", "\"\<\[Beta]\>\"", ",", 
           "\"\<\[Gamma]\>\""}], "}"}], "\[IndentingNewLine]", "\[Rule]", 
         RowBox[{"GetLatticeParameters", "[", 
          RowBox[{"G", ",", 
           RowBox[{"\"\<Units\>\"", "\[Rule]", "True"}]}], "]"}]}], "]"}]}]}],
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"3.", 
       RowBox[{"B", ".", " ", "Transforming"}], " ", "coordinates", " ", 
       "and", " ", "ADPs"}], " ", "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{"Fractional", " ", "coordinates"}], " ", "*)"}], 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"xyz", "=", 
      RowBox[{"$CrystalData", "\[LeftDoubleBracket]", 
       RowBox[{
       "crystal", ",", "\[IndentingNewLine]", "\t", "\"\<AtomData\>\"", ",", 
        "All", ",", "\"\<FractionalCoordinates\>\""}], 
       "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"newxyz", "=", 
      RowBox[{"Chop", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"FractionalPart", "[", 
          RowBox[{
           RowBox[{"Dot", "[", 
            RowBox[{"Q", ",", "#"}], "]"}], "+", "q"}], "]"}], "&"}], "/@", 
        "xyz"}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{"(*", " ", 
      RowBox[{"Atomic", " ", "displacement", " ", "parameters"}], " ", "*)"}],
      "\[IndentingNewLine]", "\t", 
     RowBox[{"adps", "=", 
      RowBox[{"Lookup", "[", 
       RowBox[{
        RowBox[{"$CrystalData", "[", 
         RowBox[{"crystal", ",", "\"\<AtomData\>\""}], "]"}], ",", 
        "\[IndentingNewLine]", "\t", "\"\<DisplacementParameters\>\"", ",", 
        "0."}], "]"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"U", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"#1", ",", "#4", ",", "#5"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"#4", ",", "#2", ",", "#6"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"#5", ",", "#6", ",", "#3"}], "}"}]}], "}"}], "&"}], "@@",
          "#"}], "&"}], "/@", "adps"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{"Preparing", " ", 
       RowBox[{"diagonal", " ", "'"}], 
       RowBox[{"N", "'"}], " ", "matrices"}], " ", "*)"}], 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
        "References", ":", "\[IndentingNewLine]", "\t", "https", ":"}], "//", 
        
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"doi", ".", "org"}], "/", "10.1107"}], "/", 
          "S0108767311018216"}], "\[IndentingNewLine]", "\t", 
         RowBox[{"https", ":"}]}]}], "//", 
       RowBox[{
        RowBox[{
         RowBox[{"doi", ".", "org"}], "/", "10.1107"}], "/", 
        "S0021889802008580"}]}], " ", "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{"n0", "=", 
      RowBox[{"DiagonalMatrix", "@", 
       RowBox[{"Sqrt", "@", 
        RowBox[{"Diagonal", "@", 
         RowBox[{"Inverse", "@", "G0"}]}]}]}]}], ";", "\[IndentingNewLine]", 
     "\t", 
     RowBox[{"n", "=", 
      RowBox[{"Inverse", "@", 
       RowBox[{"DiagonalMatrix", "@", 
        RowBox[{"Sqrt", "@", 
         RowBox[{"Diagonal", "@", 
          RowBox[{"Inverse", "@", "G"}]}]}]}]}]}], ";", "\[IndentingNewLine]",
      "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{"Transforming", " ", "ADPs"}], " ", "*)"}], 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"newU", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", "\t", 
      RowBox[{
       RowBox[{
        RowBox[{"u", "=", 
         RowBox[{
         "U", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], ";", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MatrixQ", "[", "u", "]"}], ",", "\[IndentingNewLine]", 
          "\t", 
          RowBox[{
           RowBox[{"temp", "=", 
            RowBox[{"n0", ".", "u", ".", 
             RowBox[{"Transpose", "[", "n0", "]"}]}]}], ";", 
           "\[IndentingNewLine]", "\t", 
           RowBox[{"temp", "=", 
            RowBox[{"Q", ".", "temp", ".", 
             RowBox[{"Transpose", "[", "Q", "]"}]}]}], ";", 
           "\[IndentingNewLine]", "\t", 
           RowBox[{"temp", "=", 
            RowBox[{"Chop", "[", 
             RowBox[{"n", ".", "temp", ".", 
              RowBox[{"Transpose", "[", "n", "]"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\t", 
           RowBox[{"temp", "=", 
            RowBox[{
             RowBox[{
              RowBox[{"Part", "[", 
               RowBox[{"temp", ",", 
                RowBox[{"#", "/.", 
                 RowBox[{"List", "\[Rule]", "Sequence"}]}]}], "]"}], "&"}], "/@",
              "\[IndentingNewLine]", "\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"2", ",", "2"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"3", ",", "3"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "2"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "3"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"2", ",", "3"}], "}"}]}], "}"}]}]}]}], ",", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{"temp", "=", "u"}]}], "]"}], ";", "\[IndentingNewLine]", 
        "\t", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"newU", ",", "temp"}], "]"}]}], ",", "\[IndentingNewLine]", 
       "\t", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "@", "adps"}]}], "}"}]}], "\[IndentingNewLine]", 
      "\t", "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"--", "-"}], "*", " ", "4.", " ", "Overwriting", " ", "entry", 
       " ", "in", " ", "$CrystalData", " ", "*", 
       RowBox[{"--", "-"}]}], "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Determine", " ", "new", " ", "space", " ", "group", " ", "symbol", " ",
        "automatically"}], " ", "*)"}], "\[IndentingNewLine]", "\t\t", 
     RowBox[{"(*", " ", 
      RowBox[{"Remove", " ", "old", " ", "cell", " ", "tag"}], " ", "*)"}], 
     "\[IndentingNewLine]", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"StringTake", "[", 
         RowBox[{"targetSG", ",", 
          RowBox[{"{", 
           RowBox[{"-", "2"}], "}"}]}], "]"}], "===", "\"\<:\>\""}], ",", 
       "\[IndentingNewLine]", "\t\t", 
       RowBox[{"targetSG", "=", 
        RowBox[{"StringTake", "[", 
         RowBox[{"targetSG", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "3"}]}], "}"}]}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"(*", " ", 
      RowBox[{"Update", " ", "space", " ", "group", " ", "symbol"}], " ", 
      "*)"}], "\[IndentingNewLine]", "\t\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"targetO", "===", "2"}], "||", 
          RowBox[{
           RowBox[{"targetSetting", "[", "\"\<CellOrigin\>\"", "]"}], "===", 
           "2"}]}], ")"}], "&&", "\[IndentingNewLine]", "\t\t", 
        RowBox[{"!", 
         RowBox[{"StringContainsQ", "[", 
          RowBox[{"targetSG", ",", "\"\<:2\>\""}], "]"}]}]}], ",", 
       "\[IndentingNewLine]", "\t\t", 
       RowBox[{"targetSG", "=", 
        RowBox[{"targetSG", "<>", "\"\<:2\>\""}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Get", " ", "full", " ", "Hermann"}], "\[Dash]", 
       RowBox[{"Mauguin", " ", "symbol"}]}], " ", "*)"}], 
     "\[IndentingNewLine]", "\t\t", 
     RowBox[{"targetFullHM", "=", 
      RowBox[{"GetSymmetryData", "[", 
       RowBox[{"targetSG", ",", "\"\<HermannMauguinFull\>\""}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"(*", " ", 
      RowBox[{"Set", " ", "new", " ", "symbol"}], " ", "*)"}], 
     "\[IndentingNewLine]", "\t\t", 
     RowBox[{
      RowBox[{"$CrystalData", "[", 
       RowBox[{"crystal", ",", "\"\<SpaceGroup\>\""}], "]"}], "=", 
      "targetSG"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{"New", " ", "lattice", " ", "parameters"}], " ", "*)"}], 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"AppendTo", "[", 
      RowBox[{
       RowBox[{"$CrystalData", "[", 
        RowBox[{
        "crystal", ",", "\[IndentingNewLine]", "\t", 
         "\"\<LatticeParameters\>\""}], "]"}], ",", "newlattice"}], "]"}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{"New", " ", "fractional", " ", "coordinates"}], " ", "*)"}], 
     "\[IndentingNewLine]", "\t", 
     RowBox[{
      RowBox[{"$CrystalData", "\[LeftDoubleBracket]", 
       RowBox[{
       "crystal", ",", "\"\<AtomData\>\"", ",", "All", ",", 
        "\[IndentingNewLine]", "\t", "\"\<FractionalCoordinates\>\""}], 
       "\[RightDoubleBracket]"}], "=", "newxyz"}], ";", "\[IndentingNewLine]",
      "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{"New", " ", "ADPs"}], " ", "*)"}], "\[IndentingNewLine]", "\t", 
     
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"AllTrue", "[", 
         RowBox[{
          RowBox[{"N", "@", "newU"}], ",", 
          RowBox[{
           RowBox[{"#", "\[Equal]", "0."}], "&"}]}], "]"}]}], ",", 
       "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{"$CrystalData", "\[LeftDoubleBracket]", 
         RowBox[{
         "crystal", ",", "\"\<AtomData\>\"", ",", "All", ",", 
          "\[IndentingNewLine]", "\t", "\"\<DisplacementParameters\>\""}], 
         "\[RightDoubleBracket]"}], "=", "newU"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Updating", " ", "'"}], 
       RowBox[{"Notes", "'"}], " ", "and", " ", "adding", " ", "space", " ", 
       "group", " ", "notes", " ", "if", " ", "needed"}], " ", "*)"}], 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"If", "[", "\[IndentingNewLine]", "\t", 
      RowBox[{"(*", " ", 
       RowBox[{"a", ".", " ", 
        RowBox[{"Exception", ":", " ", 
         RowBox[{"default", " ", "space", " ", "group", " ", "setting"}]}]}], 
       " ", "*)"}], "\[IndentingNewLine]", "\t", 
      RowBox[{
       RowBox[{
        RowBox[{"Sort", "@", 
         RowBox[{"Values", "@", 
          RowBox[{"SG", "[", "\"\<Setting\>\"", "]"}]}]}], "===", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"Sort", "@", 
         RowBox[{"DeleteMissing", "@", 
          RowBox[{"{", 
           RowBox[{"targetCell", ",", "targetRS", ",", "targetCentring"}], 
           "}"}]}]}]}], ",", "\[IndentingNewLine]", "\t", 
       RowBox[{"KeyDropFrom", "[", 
        RowBox[{"notes", ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<MultipleCell\>\"", ",", "\"\<RhombohedralSetting\>\"", ",", 
           "\"\<CellCentring\>\""}], "}"}]}], "]"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "\t", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"b", ".", " ", "Write"}], " ", "both", " ", "multiple", " ", 
         "cell", " ", "and", " ", "rhombohedral", " ", "setting"}], " ", 
        "*)"}], "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"KeyExistsQ", "[", 
            RowBox[{"targetSetting", ",", "\"\<MultipleCell\>\""}], "]"}], "&&",
            "\[IndentingNewLine]", "\t", 
           RowBox[{"!", 
            RowBox[{"MemberQ", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"\"\<P\>\"", ",", "\"\<I\>\""}], "}"}], ",", 
              "targetCell"}], "]"}]}]}], ",", "\[IndentingNewLine]", "\t", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"notes", ",", 
            RowBox[{"\"\<MultipleCell\>\"", "\[Rule]", "targetCell"}]}], 
           "]"}]}], "]"}], ";", "\[IndentingNewLine]", "\t", 
        "\[IndentingNewLine]", "\t", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{"hex3List", ",", "targetCell"}], "]"}], ",", 
          "\[IndentingNewLine]", "\t", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"notes", ",", 
            RowBox[{"\"\<RhombohedralSetting\>\"", "\[Rule]", "targetRS"}]}], 
           "]"}], ",", "\[IndentingNewLine]", "\t", 
          RowBox[{"KeyDropFrom", "[", 
           RowBox[{"notes", ",", "\"\<RhombohedralSetting\>\""}], "]"}]}], 
         "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"!", 
            RowBox[{"MissingQ", "@", "targetCentring"}]}], "&&", 
           RowBox[{"ValueQ", "@", "targetCentring"}], "&&", 
           "\[IndentingNewLine]", "\t", 
           RowBox[{"(*", " ", 
            RowBox[{
            "No", " ", "need", " ", "if", " ", "centring", " ", "is", " ", 
             "in", " ", "space", " ", "group", " ", "symbol"}], " ", "*)"}], 
           "\[IndentingNewLine]", "\t", 
           RowBox[{
            RowBox[{"StringTake", "[", 
             RowBox[{"targetFullHM", ",", "1"}], "]"}], "\[NotEqual]", 
            "targetCentring"}]}], ",", "\[IndentingNewLine]", "\t", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"notes", ",", 
            RowBox[{"\"\<CellCentring\>\"", "\[Rule]", "targetCentring"}]}], 
           "]"}]}], "]"}]}]}], "\[IndentingNewLine]", "\t", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", " ", 
      RowBox[{"Writing", " ", 
       RowBox[{"over", " ", "'"}], 
       RowBox[{"Notes", "'"}], " ", "or", " ", "removing", " ", "if", " ", 
       "empty"}], " ", "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"notes", "=!=", 
        RowBox[{"<|", "|>"}]}], ",", "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{"$CrystalData", "[", 
         RowBox[{"crystal", ",", "\"\<Notes\>\""}], "]"}], "=", 
        RowBox[{"Sort", "@", "notes"}]}], ",", "\[IndentingNewLine]", "\t", 
       RowBox[{"KeyDropFrom", "[", 
        RowBox[{
         RowBox[{"$CrystalData", "[", "crystal", "]"}], ",", 
         "\"\<Notes\>\""}], "]"}]}], "\[IndentingNewLine]", "\t", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"--", "-"}], "*", " ", "5.", " ", "Display", " ", "*", 
       RowBox[{"--", "-"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Label", "[", "\"\<End\>\"", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"InputCheck", "[", 
      RowBox[{"\"\<ShallowDisplayCrystal\>\"", ",", "crystal"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->False,
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->"In[2]:=",
 CellID->24626837]
}, Closed]],

Cell["", "SectionFooterSpacer"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]]],
 "See Also"
}], "SeeAlsoSection",
 WholeCellGroupOpener->True,
 CellID->1255426704],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["$CrystalData"]], "paclet:MaXrd/ref/$CrystalData"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["$TransformationMatrices"]], 
    "paclet:MaXrd/ref/$TransformationMatrices"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ToStandardSetting"]], "paclet:MaXrd/ref/ToStandardSetting"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["GetSymmetryData"]], "paclet:MaXrd/ref/GetSymmetryData"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["GetCrystalMetric"]], "paclet:MaXrd/ref/GetCrystalMetric"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["$SpaceGroups"]], "paclet:MaXrd/ref/$SpaceGroups"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["GetLatticeParameters"]], 
    "paclet:MaXrd/ref/GetLatticeParameters"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"]
}], "SeeAlso",
 CellID->929782353]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]]],
 "Related Guides"
}], "MoreAboutSection",
 WholeCellGroupOpener->True,
 CellID->38303248],

Cell["", "SectionHeaderSpacer"],

Cell[BoxData[
 TemplateBox[{
   Cell[
    TextData["MaXrd: Mathematica X-ray diffraction package"]], 
   "paclet:MaXrd/guide/MaXrd"},
  "RefLink",
  BaseStyle->"MoreAbout"]], "MoreAbout",
 CellID->593668768]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"UnitCellTransformation",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "SymbolColor", "LinkTrails" -> 
  GridBox[{{
      RowBox[{
        ButtonBox[
        "MaXrd: Mathematica X-ray diffraction package", ButtonData -> 
         "paclet:MaXrd/guide/MaXrd", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "HasOptions" -> True, "ExampleCounter" -> 1, "NeedPlatMsgIn" -> 
  None, "RootCaptions" -> "", 
  "Metadata" -> {
   "built" -> "{2020, 9, 3, 23, 16, 57.438474}", 
    "history" -> {"0.7", "2.2.0", "", ""}, "context" -> "MaXrd`", 
    "keywords" -> {}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "MaXrd Symbol", "language" -> "en", "paclet" -> "MaXrd", "status" -> 
    "None", "summary" -> 
    "UnitCellTransformation[crystal, settingi -> valuei, ...] transforms the \
unit cell of crystal according to the given settings. \
UnitCellTransformation[crystal, group] transforms the unit cell of crystal to \
the target space group group.", "synonyms" -> {}, "tabletags" -> {}, "title" -> 
    "UnitCellTransformation", "titlemodifier" -> "", "windowtitle" -> 
    "UnitCellTransformation", "type" -> "Symbol", "uri" -> 
    "MaXrd/ref/UnitCellTransformation", "WorkflowDockedCell" -> ""}, 
  "SearchTextTranslated" -> "", "NewStyles" -> False},
CellContext->"Global`",
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (June 19, 2020)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> "12.1 for Mac OS X x86 (64-bit) (June 19, 2020)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "PrimaryExamplesSection"->{
  Cell[14948, 417, 267, 10, 70, "PrimaryExamplesSection",ExpressionUUID->"bc1de57b-bd14-45e6-bf1f-6fe73dd48c6e",
   CellTags->"PrimaryExamplesSection",
   CellID->226878532]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"PrimaryExamplesSection", 232605, 5604}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[594, 21, 4261, 102, 70, "AnchorBarGrid",ExpressionUUID->"09f8d1ef-ae73-43fc-84f3-35b5ef3bed41",
 CellID->1],
Cell[CellGroupData[{
Cell[4880, 127, 179, 6, 70, "ObjectNameGrid",ExpressionUUID->"d67ab5c4-9b80-4d0b-9229-fde656fd46ee"],
Cell[5062, 135, 1558, 48, 70, "Usage",ExpressionUUID->"49c69d18-1e14-4dad-b34d-cc3e2b701616",
 CellID->982511436]
}, Open  ]],
Cell[CellGroupData[{
Cell[6657, 188, 642, 19, 70, "NotesSection",ExpressionUUID->"1f6fd1f0-5021-4cf1-b5ca-46f1685dab88",
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->2072494296],
Cell[7302, 209, 31, 0, 70, "SectionHeaderSpacer",ExpressionUUID->"33177f35-e0c6-4a81-895a-3d77e3253042"],
Cell[7336, 211, 447, 16, 70, "Notes",ExpressionUUID->"2eee3b66-5a4b-457b-94be-21221b1c0ab6",
 CellID->1081352006],
Cell[7786, 229, 127, 4, 70, "Notes",ExpressionUUID->"0308b9e5-982c-45ed-b727-63cf76f3f65e",
 CellID->179929223],
Cell[7916, 235, 1728, 32, 70, "3ColumnTableMod",ExpressionUUID->"ae4f3168-a99e-4d31-81b1-4936e1b99647",
 CellID->1809341154],
Cell[9647, 269, 297, 7, 70, "Notes",ExpressionUUID->"588b2ec7-7859-4b4e-ba2b-4b67c6ae9186",
 CellID->443141208],
Cell[9947, 278, 2024, 36, 70, "3ColumnTableMod",ExpressionUUID->"8d099b32-49cc-4d95-984c-4fff4f589d55",
 CellID->856829393],
Cell[11974, 316, 1045, 34, 70, "Notes",ExpressionUUID->"21099fd4-cd83-4301-977b-b8dccf87acee",
 CellID->2119178073],
Cell[13022, 352, 480, 12, 70, "Notes",ExpressionUUID->"fa8a11f1-e0fc-4bd0-a94f-fd9f9aa42e83",
 CellID->266054275],
Cell[13505, 366, 377, 13, 70, "Notes",ExpressionUUID->"27c447db-3cff-4397-a770-72b6c880f33e",
 CellID->158694970],
Cell[13885, 381, 424, 13, 70, "Notes",ExpressionUUID->"ba26758f-8861-4c63-b502-d295f046d449",
 CellID->344559116],
Cell[14312, 396, 565, 14, 70, "Notes",ExpressionUUID->"82755602-d26c-40d9-9257-d3afe680bf37",
 CellID->465380681],
Cell[14880, 412, 31, 0, 70, "SectionFooterSpacer",ExpressionUUID->"2b64214b-5549-4ce5-a3ab-f9effe16f863"]
}, Closed]],
Cell[CellGroupData[{
Cell[14948, 417, 267, 10, 70, "PrimaryExamplesSection",ExpressionUUID->"bc1de57b-bd14-45e6-bf1f-6fe73dd48c6e",
 CellTags->"PrimaryExamplesSection",
 CellID->226878532],
Cell[CellGroupData[{
Cell[15240, 431, 196, 6, 70, "ExampleSection",ExpressionUUID->"c2496295-8d30-4f98-975b-5af6d9b84d80",
 CellID->1364013899],
Cell[15439, 439, 146, 6, 70, "ExampleText",ExpressionUUID->"e592f1b6-4c9f-414c-a85e-a46aa8d8f996",
 CellID->1457080377],
Cell[CellGroupData[{
Cell[15610, 449, 370, 10, 70, "Input",ExpressionUUID->"178c7b21-dc7e-49d1-bb99-edf252db564a",
 CellID->1813829567],
Cell[15983, 461, 2093, 52, 70, "Output",ExpressionUUID->"41c8b947-e9b9-4cce-844e-2a58f5274642",
 CellID->1377650363]
}, Open  ]],
Cell[18091, 516, 135, 4, 70, "ExampleText",ExpressionUUID->"3848f966-ec25-4268-8175-a14c645632a8",
 CellID->1613748649],
Cell[CellGroupData[{
Cell[18251, 524, 270, 6, 70, "Input",ExpressionUUID->"7caa094c-da7c-4d34-a9b9-02c61d647ed3",
 CellID->1440470077],
Cell[18524, 532, 2050, 51, 70, "Output",ExpressionUUID->"32c1ecbe-8bb8-4e26-ab83-f63d1022be40",
 CellID->968987]
}, Open  ]],
Cell[20589, 586, 300, 10, 70, "ExampleText",ExpressionUUID->"2e6379c5-8b05-4fe9-98b4-11f6124c764f",
 CellID->83868485],
Cell[CellGroupData[{
Cell[20914, 600, 207, 6, 70, "Input",ExpressionUUID->"d41edbe3-38ac-485f-82ec-bfff1f2b5802",
 CellID->651903697],
Cell[21124, 608, 2118, 52, 70, "Output",ExpressionUUID->"8cfa1d2f-c58c-4034-b4b2-de652d8e7c09",
 CellID->1253378980]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[23291, 666, 187, 6, 70, "ExampleSection",ExpressionUUID->"322ed147-2313-4be5-b755-3ad0fd201c00",
 CellID->1293636265],
Cell[23481, 674, 172, 6, 70, "ExampleText",ExpressionUUID->"bc32b67b-0c6d-4370-ac7a-acaada9004d9",
 CellID->658661185],
Cell[CellGroupData[{
Cell[23678, 684, 381, 11, 70, "Input",ExpressionUUID->"599d06fe-0c33-4caf-8afd-a4578aa47189",
 CellID->1014259112],
Cell[24062, 697, 2181, 54, 70, "Output",ExpressionUUID->"9dcc2920-e030-4429-9b06-f8a84ca2854d",
 CellID->811337585]
}, Open  ]],
Cell[26258, 754, 140, 4, 70, "ExampleText",ExpressionUUID->"bbb1f293-4cbf-4f95-b91e-9f6f437428e2",
 CellID->2038090694],
Cell[CellGroupData[{
Cell[26423, 762, 225, 6, 70, "Input",ExpressionUUID->"b7b92e65-68a1-486e-a654-e139595c8f1a",
 CellID->2075189145],
Cell[26651, 770, 2435, 57, 70, "Output",ExpressionUUID->"359e95e0-723a-4b74-b4a0-c34d80d67502",
 CellID->693347646]
}, Open  ]],
Cell[29101, 830, 298, 7, 70, "ExampleText",ExpressionUUID->"a53dacf0-f347-4cc7-bfff-e0a49b378c0e",
 CellID->341963236],
Cell[CellGroupData[{
Cell[29424, 841, 146, 4, 70, "Input",ExpressionUUID->"7665415d-8793-4cbf-9fec-22cb41173fbf",
 CellID->1710381513],
Cell[29573, 847, 2214, 54, 70, "Output",ExpressionUUID->"2581a4c1-75cd-4aa7-86f9-c78f82aab3ad",
 CellID->964215521]
}, Open  ]],
Cell[CellGroupData[{
Cell[31824, 906, 126, 3, 70, "ExampleDelimiter",ExpressionUUID->"707daa9e-8baf-453f-9f42-b602327aed30",
 CellID->1957161973],
Cell[31953, 911, 213, 5, 70, "ExampleText",ExpressionUUID->"2f571450-9582-4834-a0fc-4c48ea1fb940",
 CellID->166875052],
Cell[32169, 918, 130, 4, 70, "Input",ExpressionUUID->"ef25a7d2-6698-4cd6-a6d6-de8c102ab3b6",
 CellID->527034049],
Cell[32302, 924, 122, 3, 70, "ExampleText",ExpressionUUID->"84085eda-ef87-4960-ba0e-2ab375dcce5b",
 CellID->734494782],
Cell[CellGroupData[{
Cell[32449, 931, 689, 19, 70, "Input",ExpressionUUID->"226d7ac6-96be-4e0a-8ed9-d6f1cbb46eac",
 CellID->671089335],
Cell[33141, 952, 303, 9, 70, "Output",ExpressionUUID->"06c989fa-c1a8-4f7a-80e2-c0b648590cd9",
 CellID->1593148960]
}, Open  ]],
Cell[33459, 964, 69, 1, 70, "ExampleText",ExpressionUUID->"db9e398c-359e-4807-b280-d654daa82320",
 CellID->1205842415],
Cell[CellGroupData[{
Cell[33553, 969, 393, 12, 70, "Input",ExpressionUUID->"de69c079-9b6b-4186-af73-e0cecb7334b8",
 CellID->283717796],
Cell[33949, 983, 2546, 73, 70, "Output",ExpressionUUID->"a266b6c5-be19-4570-ac74-6dbb213fb2dc",
 CellID->1228459924]
}, Open  ]],
Cell[36510, 1059, 139, 4, 70, "ExampleText",ExpressionUUID->"0a76d8f1-e9cf-42fe-96ce-c6377d816017",
 CellID->1680932570],
Cell[CellGroupData[{
Cell[36674, 1067, 160, 4, 70, "Input",ExpressionUUID->"266635a3-66b2-4a65-9eac-fc51038a2900",
 CellID->1279422874],
Cell[36837, 1073, 1752, 45, 70, "Output",ExpressionUUID->"acd8bb40-3fb3-4bdf-9697-1a30ff390b98",
 CellID->818160410]
}, Open  ]],
Cell[38604, 1121, 95, 1, 70, "ExampleText",ExpressionUUID->"53a42df5-d900-442e-9698-ea8b30e444ae",
 CellID->2026203058],
Cell[CellGroupData[{
Cell[38724, 1126, 101, 3, 70, "Input",ExpressionUUID->"6ed1b557-59cb-4381-b217-846c80e62db1",
 CellID->1865658678],
Cell[38828, 1131, 228, 6, 70, "Output",ExpressionUUID->"7fa086e6-3a5d-44cd-9a49-58cc0fbf454f",
 CellID->484219129]
}, Open  ]],
Cell[CellGroupData[{
Cell[39093, 1142, 100, 3, 70, "Input",ExpressionUUID->"2fed08e0-6fc8-4b0e-ba85-2bddf81230c2",
 CellID->885182825],
Cell[39196, 1147, 2405, 71, 70, "Output",ExpressionUUID->"d8a09752-0ca0-40c8-9939-1baf64956dd5",
 CellID->1455362620]
}, Open  ]],
Cell[41616, 1221, 146, 4, 70, "ExampleText",ExpressionUUID->"1e605c65-6b36-44a3-b26d-46f1ea868b49",
 CellID->1665431182],
Cell[CellGroupData[{
Cell[41787, 1229, 194, 5, 70, "Input",ExpressionUUID->"b9a3cd68-4d50-4e86-8d79-f182c752c353",
 CellID->269201022],
Cell[41984, 1236, 1754, 45, 70, "Output",ExpressionUUID->"b3535243-2df8-4f3d-8e2b-4c3b2a2e98ba",
 CellID->440815010]
}, Open  ]],
Cell[43753, 1284, 103, 2, 70, "ExampleText",ExpressionUUID->"09eb4235-be8f-4975-8342-904441bb9f9c",
 CellID->1354264927],
Cell[CellGroupData[{
Cell[43881, 1290, 101, 3, 70, "Input",ExpressionUUID->"2fb6ce52-badc-4808-8919-cf796ea935ef",
 CellID->1078879983],
Cell[43985, 1295, 303, 9, 70, "Output",ExpressionUUID->"e5038bc4-e4ac-4da6-8a24-8b1f427c2dc6",
 CellID->2106774567]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[44337, 1310, 126, 3, 70, "ExampleDelimiter",ExpressionUUID->"12be0c43-06c2-47f1-a53b-f4b868deb106",
 CellID->1415114360],
Cell[44466, 1315, 169, 5, 70, "ExampleText",ExpressionUUID->"86f9bfe4-36a1-403d-b1ad-32ec207e0033",
 CellID->1236632999],
Cell[CellGroupData[{
Cell[44660, 1324, 368, 10, 70, "Input",ExpressionUUID->"12cfc933-9aac-46dc-9bd5-9ec3d9929756",
 CellID->44268505],
Cell[45031, 1336, 2092, 52, 70, "Output",ExpressionUUID->"58dff87b-8d46-4cdd-9b8a-14d9c687074d",
 CellID->849775833]
}, Open  ]],
Cell[47138, 1391, 281, 10, 70, "ExampleText",ExpressionUUID->"5f5313f2-cdaf-4468-85c0-54aafa9b77cc",
 CellID->1190426388],
Cell[CellGroupData[{
Cell[47444, 1405, 304, 9, 70, "Input",ExpressionUUID->"82d38eed-f313-490a-a83c-c36a77321c13",
 CellID->1646173065],
Cell[47751, 1416, 26901, 531, 70, "Output",ExpressionUUID->"8a3bf9b9-a862-4358-8c15-c93b60f67d20",
 CellID->1416172681]
}, Open  ]],
Cell[74667, 1950, 200, 7, 70, "ExampleText",ExpressionUUID->"e74c4886-fd42-4863-bc48-18671e2eb8b0",
 CellID->668713251],
Cell[CellGroupData[{
Cell[74892, 1961, 496, 15, 70, "Input",ExpressionUUID->"481ec4d7-22d2-4189-9647-832e7c2320ba",
 CellID->1361270022],
Cell[75391, 1978, 26905, 530, 70, "Output",ExpressionUUID->"99fa0fab-be85-4c8f-8110-b4d4c195073e",
 CellID->1052989866]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[102357, 2515, 189, 6, 70, "ExampleSection",ExpressionUUID->"62630e2d-d9ee-4b63-bf14-7584032c304c",
 CellID->2061341341],
Cell[CellGroupData[{
Cell[102571, 2525, 199, 6, 70, "ExampleSubsection",ExpressionUUID->"808cdfc6-c385-4f5c-b104-9be12e3e8f46",
 CellID->1757724783],
Cell[102773, 2533, 199, 6, 70, "ExampleText",ExpressionUUID->"c6e3603c-1103-43d7-8990-d048d842b3c6",
 CellID->1080897061],
Cell[CellGroupData[{
Cell[102997, 2543, 269, 6, 70, "Input",ExpressionUUID->"f0a94ee9-3090-4a01-a917-5823bd5eae5d",
 CellID->117858225],
Cell[103269, 2551, 303, 10, 70, "Output",ExpressionUUID->"9febdc24-39c6-437a-8e9f-242d1d4dfa36",
 CellID->556641501]
}, Open  ]],
Cell[103587, 2564, 140, 4, 70, "ExampleText",ExpressionUUID->"6b7f0d74-d8e6-4591-82a7-ff9ed1df71a1",
 CellID->2116444218]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[103776, 2574, 197, 6, 70, "ExampleSection",ExpressionUUID->"431d0449-a2e1-408c-a9b7-35df7e7ce753",
 CellID->1305812373],
Cell[103976, 2582, 90, 1, 70, "ExampleText",ExpressionUUID->"995a2569-e0a1-4877-836c-96277d1c9eae",
 CellID->690732889],
Cell[CellGroupData[{
Cell[104091, 2587, 229, 6, 70, "Input",ExpressionUUID->"a025544b-3f0d-4f51-83b9-e281e5e56dca",
 CellID->69545001],
Cell[104323, 2595, 682, 13, 70, "Message",ExpressionUUID->"d3d3d454-5531-445c-9744-b9e0df51ca65",
 CellID->1539172892],
Cell[105008, 2610, 78, 2, 70, "Output",ExpressionUUID->"6005880c-b9fc-4b3a-9f1e-cc3023c24b43",
 CellID->290784082]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[105135, 2618, 202, 6, 70, "ExampleSection",ExpressionUUID->"4bf53bea-4a56-48e5-953b-ad22e705c7b4",
 CellID->1653164318],
Cell[105340, 2626, 131, 5, 70, "ExampleText",ExpressionUUID->"af2844aa-8594-4356-83c1-71143b17dec2",
 CellID->200455833],
Cell[CellGroupData[{
Cell[105496, 2635, 370, 10, 70, "Input",ExpressionUUID->"5ba8bdf9-0391-4ae2-b4b4-a6a42eb0670f",
 CellID->1806826735],
Cell[105869, 2647, 2093, 52, 70, "Output",ExpressionUUID->"ec36625a-d75d-4dba-a934-c8f489209259",
 CellID->1157432833]
}, Open  ]],
Cell[107977, 2702, 211, 5, 70, "ExampleText",ExpressionUUID->"687abe7d-683e-4baa-8873-d6cea8238539",
 CellID->1568731754],
Cell[108191, 2709, 1178, 31, 70, "Input",ExpressionUUID->"bff575ff-1703-4079-9423-a7a210cd0de9",
 CellID->1215878290]
}, Closed]],
Cell[CellGroupData[{
Cell[109406, 2745, 236, 8, 70, "ExampleSection",ExpressionUUID->"5178e489-0a85-46d4-8032-8403ce66309b",
 CellID->1098223308],
Cell[109645, 2755, 2541, 65, 70, "Input",ExpressionUUID->"79cbb1a2-0726-4fcc-9e2e-b52ef1477df3",
 InitializationCell->False,
 CellID->912793279],
Cell[112189, 2822, 115373, 2619, 70, "Input",ExpressionUUID->"5f60c2d3-f9fd-43f9-a67c-fc437516e7a9",
 InitializationCell->False,
 CellID->24626837]
}, Closed]],
Cell[227577, 5444, 31, 0, 70, "SectionFooterSpacer",ExpressionUUID->"2fafc7a3-bc9c-4ac2-bf77-49067345bace"]
}, Open  ]],
Cell[CellGroupData[{
Cell[227645, 5449, 150, 7, 70, "SeeAlsoSection",ExpressionUUID->"e9ba9f8a-9fd6-4459-b326-0b2feed4417a",
 CellID->1255426704],
Cell[227798, 5458, 2228, 70, 70, "SeeAlso",ExpressionUUID->"8a268d70-5327-4577-be06-21a09352fd73",
 CellID->929782353]
}, Open  ]],
Cell[CellGroupData[{
Cell[230063, 5533, 156, 7, 70, "MoreAboutSection",ExpressionUUID->"a2ff3355-1aed-49f7-a9a0-94d64bdb5e04",
 CellID->38303248],
Cell[230222, 5542, 31, 0, 70, "SectionHeaderSpacer",ExpressionUUID->"c44604b2-2521-4d60-9bba-6977e8ca9cbc"],
Cell[230256, 5544, 207, 7, 70, "MoreAbout",ExpressionUUID->"a9e561ba-833a-4a54-9088-f1d7eb73c394",
 CellID->593668768]
}, Open  ]],
Cell[230478, 5554, 23, 0, 70, "FooterCell",ExpressionUUID->"69c560e1-fa80-4223-8885-4e6606ff3684"]
}
]
*)

(* End of internal cache information *)
